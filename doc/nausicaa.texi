\input texinfo.tex
@c %**start of header
@setfilename nausicaa.info
@settitle Nausicaa
@c %**end of header

@c page
@c ------------------------------------------------------------
@c Macros.
@c ------------------------------------------------------------

@include version.texiinc


@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c License macros.
@c ------------------------------------------------------------

@macro gnu{}
@acronym{GNU}
@end macro

@macro gpl{}
@acronym{GPL}
@end macro

@macro fdl{}
@acronym{FDL}
@end macro

@macro bsd{}
@acronym{BSD}
@end macro

@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Miscellaneous acronyms.
@c ------------------------------------------------------------

@macro ansi{}
@acronym{ANSI}
@end macro

@macro api{}
@acronym{API}
@end macro

@macro ascii{}
@acronym{ASCII}
@end macro

@macro cpu{}
@acronym{CPU}
@end macro

@macro ieee{}
@acronym{IEEE}
@end macro

@macro iso{}
@acronym{ISO}
@end macro

@macro ram{}
@acronym{RAM}
@end macro

@macro posix{}
@acronym{POSIX}
@end macro

@c Remember that @url is already used by Texinfo.
@macro urla{}
@acronym{URL}
@end macro

@macro utf{}
@acronym{UTF}
@end macro


@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Software related macros.
@c ------------------------------------------------------------

@macro gmp{}
@acronym{GMP}
@end macro

@macro gcc{}
@acronym{GCC}
@end macro

@macro glibc{}
@gnu{} C Library
@end macro

@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Network related acronyms.
@c ------------------------------------------------------------

@macro tcp{}
@acronym{TCP}
@end macro

@macro udp{}
@acronym{UDP}
@end macro

@macro icmp{}
@acronym{ICMP}
@end macro

@c ------------------------------------------------------------

@macro http{}
@acronym{HTTP}
@end macro

@macro https{}
@acronym{HTTP}
@end macro

@macro ftp{}
@acronym{FTP}
@end macro

@macro smtp{}
@acronym{SMTP}
@end macro

@macro snmp{}
@acronym{SNMP}
@end macro

@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Arguments macros.
@c ------------------------------------------------------------

@macro vari{ARG}
@var{\ARG\1}
@end macro

@macro varii{ARG}
@var{\ARG\2}
@end macro

@macro variii{ARG}
@var{\ARG\3}
@end macro

@macro variv{ARG}
@var{\ARG\4}
@end macro

@macro varn{ARG}
@var{\ARG\n}
@end macro

@macro vark{ARG}
@var{\ARG\k}
@end macro

@macro varj{ARG}
@var{\ARG\j}
@end macro

@c ------------------------------------------------------------

@macro meta{ARG}
<\ARG\>
@end macro

@macro metai{ARG}
@meta{\ARG\1}
@end macro

@macro metaii{ARG}
@meta{\ARG\2}
@end macro

@macro metaiii{ARG}
@meta{\ARG\3}
@end macro

@macro metaiv{ARG}
@meta{\ARG\4}
@end macro

@macro metan{ARG}
@meta{\ARG\n}
@end macro

@macro metak{ARG}
@meta{\ARG\k}
@end macro

@macro metaj{ARG}
@meta{\ARG\j}
@end macro

@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c C language macros.
@c ------------------------------------------------------------

@macro cfunc{NAME}
@code{\NAME\()}
@end macro

@macro null{}
@code{NULL}
@end macro

@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Scheme language macros.
@c ------------------------------------------------------------

@macro clos{}
@acronym{CLOS}
@end macro

@macro library{NAME}
@code{(\NAME\)}
@end macro

@macro module{NAME}
@code{\NAME\}
@end macro

@macro repl{}
@acronym{REPL}
@end macro

@macro rnrs{VERSION}
@acronym{R\VERSION\RS}
@end macro

@macro srfi{}
@acronym{SRFI}
@end macro

@ignore
Separating the @srfi{}  macro from the number with a  '--' rather than a
'-' makes the expansion look ugly in menu entries under the Info reader.
IMHO this should not happen, but  it does; so we live with this, because
the main purpose of this document is to provide an Info version.
@end ignore
@macro ansrfi{NUM}
@srfi{}-\NUM\
@end macro

@c ------------------------------------------------------------

@macro func{NAME}
@code{@sc{\NAME\}}
@end macro

@macro nil{}
@code{()}
@end macro

@macro true{}
@code{#t}
@end macro

@macro false{}
@code{#f}
@end macro

@macro keyword{NAME}
@code{#:\NAME\}
@end macro

@macro class{NAME}
@code{<\NAME\>}
@end macro

@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Macros for references to external documents.
@c ------------------------------------------------------------

@macro glibcref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,libc}
@end macro

@macro rsixref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,r6rs}
@end macro

@macro rfiveref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,r5rs}
@end macro

@macro ikarusref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,ikarus}
@end macro

@macro bibref{TAG}
@code{[\TAG\]}
@end macro


@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Values.
@c ------------------------------------------------------------

@set TITLE                      Nausicaa

@c To be used as @value{PACKAGE} whenever we need to include the full
@c name of this package.
@set PACKAGE                    Nausicaa

@c To be used as @value{PACKAGE} whenever we need to include the
@c nickname of the project: the name that is used to compose the
@c distribution tarball or the web address.
@set PACKAGE_NICKNAME           nausicaa

@c To be used as @value{AUTHOR} whenever we need to include the list of
@c authors of this document.
@set AUTHOR                     Marco Maggi

@c To be used as @value{AUTHOR_EMAIL} whenever we need to include the
@c email of the *single* author of this document.
@set AUTHOR_EMAIL               @email{marcomaggi@@gna.org}

@c To be used as @value{COPYRIGHT_YEARS} whenever we need to include the
@c list of copyright years.
@set COPYRIGHT_YEARS            2008

@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Copyright notice.
@c ------------------------------------------------------------

@copying
@noindent
This document describes version @version{} of @value{PACKAGE}, a
distribution of Scheme language libraries for Ikarus Scheme.

@noindent
Copyright @copyright{} @value{COPYRIGHT_YEARS} by @value{AUTHOR} @value{AUTHOR_EMAIL}

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the @gnu{} Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with
Invariant Sections being ``@gnu{} Free Documentation License'' and
``@gnu{} General Public License, no Front--Cover Texts, and no
Back--Cover Texts.  A copy of the license is included in the section
entitled ``@gnu{} Free Documentation License''.
@end quotation
@end copying

@c ------------------------------------------------------------

@c page
@c ------------------------------------------------------------
@c Headers.
@c ------------------------------------------------------------

@titlepage
@title @value{TITLE}
@subtitle Revision @version{}
@author @value{AUTHOR} @value{AUTHOR_EMAIL}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c ------------------------------------------------------------

@ifinfo
@dircategory Development
@direntry
* nausicaa: (nausicaa).         A distribution of libraries
                                for Ikarus Scheme.
@end direntry
@end ifinfo

@c ------------------------------------------------------------

@ignore
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex fn cp
@end ignore

@c ------------------------------------------------------------

@c page
@ifnottex
@node Top
@top @value{TITLE}

@insertcopying
     
@menu
* overview::                    Overview of the package. 
* vars::                        Variables.
* package::                     Building packages.

Appendices

* Documentation License::       GNU Free Documentation License.
* references::                  Bibliography and references.

Indexes

* concept index::               An entry for each concept. 
* function index::              An entry for each function. 
* variable index::              An entry for each variable. 
* type index::                  An entry for each type. 
@end menu
@end ifnottex

@c ------------------------------------------------------------

@c page
@node overview
@chapter Overview of the package


@noindent
This ...


@c ------------------------------------------------------------

@c page
@node vars
@chapter Variables


This chapter documents the variable in the @file{Makefile}
infrastructure.


@menu
* vars misc::                   Miscellaneous variables.
@end menu


@c ------------------------------------------------------------

@c page
@node vars misc
@section Miscellaneous variables


@defvar COMPRESSOR
Select the compressor to be used when creating a tarball; it is used by
the binary distribution rules.

Supported values:

@table @code
@item bzip2
selects the Bzip2 compressor;

@item gzip
selects the Gzip compressor;
@end table

@noindent
if a different value is set, the compressor will default to @code{gzip}.
@end defvar


@c ------------------------------------------------------------

@c page
@node package
@chapter Building packages


@value{PACKAGE} has limited support for building binary packages.  All
the Nausicaa projects that declare, in their @file{README} file, to
support the Nausicaa infrastructure, support building packages as
described in this chapter.

The idea is to install the files in a temporary location, and then to
use the native packaging tools to build a binary package.  The binary
package file is moved to (or directly created into) a subdirectory of
the project build directory.

@quotation
@strong{It is of paramount importance that we set the @env{TMPDIR}
environment variable to a good value, before attempting to use the rules
described in this chapter.  If @var{TMPDIR} is set to an empty string,
the @file{Makefile} will set it to @file{/tmp}.}
@end quotation


@menu
* bindist::                     Building plain binary packages.
* slackware::                   Building Slackware packages.
@end menu


@c ------------------------------------------------------------

@c page
@node bindist
@section Building plain binary packages


Let's take the @code{nausicaa-scmobj} project as example; let's imagine
that inspecting the package variables yields this:

@example
$ cd scmobj
$ make echo-variable VARIABLE=PACKAGE_NAME
nausicaa-scmobj

$ make echo-variable VARIABLE=PACKAGE_VERSION
0.1d0

$ make echo-variable VARIABLE=package_BUILD_VERSION
1mm

$ make echo-variable VARIABLE=package_ARCH
i686

$ make echo-variable VARIABLE=TMPDIR
/tmp/marco
@end example


@c ------------------------------------------------------------

@subsubheading Makefile variables


@defvar bindist_PACKAGE_NAME
This is the file name of the binary distribution tarball.  Notice that
there is no directory part.

Example:

@example
$ make echo-variable VARIABLE=bindist_PACKAGE_NAME
nausicaa-scmobj-0.1d0-i686-1mm.tar.bz2
@end example
@end defvar


@defvar bindist_PACKAGE_TOP_BUILDDIR
This is the root directory for temporary installation of files.

Example:

@example
$ make echo-variable VARIABLE=bindist_PACKAGE_TOP_BUILDDIR
/tmp/marco/nausicaa-scmobj-0.1d0
@end example
@end defvar


@defvar bindist_BUILDDIR
This is where the produced tarball will be finally stored.

Example (from the build directory of the author):

@example
$ make echo-variable VARIABLE=bindist_PACKAGE_TOP_BUILDDIR
/home/marco/src/devel/ikarus/nausicaa/scmobj/=build/./bindist.d
@end example
@end defvar


@defvar bindist_TARBALL_PATHNAME
This is the full pathname of the tarball.

Example:

@example
$ make echo-variable VARIABLE=bindist_TARBALL_PATHNAME
/home/marco/src/devel/ikarus/nausicaa/scmobj/=build/./bindist.d/nausicaa-scmobj-0.1d0-i686-1mm.tar.bz2
@end example
@end defvar


@c ------------------------------------------------------------

@subsubheading Makefile rules


@deffn {Makefile Rule} bindist
Build the binary distribution tarball and place it in the build
directory.  To be invoked as:

@example
$ make bindist
@end example
@end deffn


@deffn {Makefile Rule} bindist-builddir
If the @code{$(bindist_BUILDDIR)} directory does not exist: create it.
To be invoked as:

@example
$ make bindist-builddir
@end example
@end deffn


@deffn {Makefile Rule} bindist-top-builddir
If the @code{$(bindist_PACKAGE_TOP_BUILDDIR)} directory does not exist:
create it.  To be invoked as:

@example
$ make bindist-top-builddir
@end example
@end deffn


@deffn {Makefile Rule} bindist-clean
Equivalent to invoke both the @code{bindist-clean-top-builddir} and
@code{bindist-clean-builddir} rules.  To be invoked as:

@example
$ make bindist-clean
@end example
@end deffn


@deffn {Makefile Rule} bindist-clean-top-builddir
Remove the @code{$(bindist_PACKAGE_TOP_BUILDDIR)} directory and all its
contents.  To be invoked as:

@example
$ make bindist-clean-top-builddir
@end example
@end deffn


@deffn {Makefile Rule} bindist-clean-builddir
Remove the @code{$(bindist_BUILDDIR)} directory and all its contents.
To be invoked as:

@example
$ make bindist-clean-builddir
@end example
@end deffn


@c ------------------------------------------------------------

@subsubheading Example layout


@example
./usr/
./usr/local/
./usr/local/lib/
./usr/local/lib/ikarus/
./usr/local/lib/ikarus/scmobj/
./usr/local/lib/ikarus/scmobj/main.sls.ikarus-fasl
./usr/local/lib/ikarus/scmobj/main.sls
./usr/local/share/
./usr/local/share/doc/
./usr/local/share/doc/nausicaa-scmobj/
./usr/local/share/doc/nausicaa-scmobj/0.1d0/
./usr/local/share/doc/nausicaa-scmobj/0.1d0/info/
./usr/local/share/doc/nausicaa-scmobj/0.1d0/info/nausicaa-scmobj.info
@end example


@c ------------------------------------------------------------

@c page
@node slackware
@section Building Slackware packages


Support for Slackware packages allows the construction of both standard
and ``local'' packages.  Let's take the @code{nausicaa-scmobj} project
as example; let's imagine that inspecting the package variables yields
this:

@example
$ cd scmobj
$ make echo-variable VARIABLE=PACKAGE_NAME
nausicaa-scmobj

$ make echo-variable VARIABLE=PACKAGE_VERSION
0.1d0

$ make echo-variable VARIABLE=package_BUILD_VERSION
1mm

$ make echo-variable VARIABLE=package_ARCH
i686

$ make echo-variable VARIABLE=TMPDIR
/tmp/marco
@end example


@menu
* slackware common::            Common variables and rules.
* slackware standard::          Building standard Slackware packages.
* slackware local::             Building local Slackware packages.
@end menu


@c ------------------------------------------------------------

@c page
@node slackware common
@subsection Common variables and rules


This section documents variables and rules that can are used both when
building standard packages and local packages.


@subsubheading Makefile variables


@defvar slack_PACKAGE_NAME
This is the file name of the Slackware package.  Notice that there is no
directory part.

Example:

@example
$ make echo-variable VARIABLE=slack_PACKAGE_NAME
nausicaa-scmobj-0.1d0-i686-1mm.tgz
@end example
@end defvar


@defvar slack_PACKAGE_PREFIX
This is the package prefix, it is used to remove the package.

Example:

@example
$ make echo-variable VARIABLE=slack_PACKAGE_PREFIX
nausicaa-scmobj-0.1d0-i686-1mm
@end example
@end defvar


@defvar slack_PACKAGE_TOP_BUILDDIR
This is the root directory for temporary installation of files.

Example:

@example
$ make echo-variable VARIABLE=slack_PACKAGE_TOP_BUILDDIR
/tmp/marco/nausicaa-scmobj-0.1d0
@end example
@end defvar


@defvar slack_PACKAGE_BUILDDIR
This is the root directory for building packages.  The rules for
standard packages will set it to:

@example
$(slack_PACKAGE_TOP_BUILDDIR)
@end example

@noindent
the rules for local packages will set it to:

@example
$(slack_PACKAGE_TOP_BUILDDIR)/$(prefix)
@end example

It is set to the empty string, and it will be set by the rules by
invoking @code{$(MAKE)} recursively.
@end defvar


@defvar slack_BUILDDIR
This is where the produced package will be finally stored.

Example (from the build directory of the author):

@example
$ make echo-variable VARIABLE=slack_BUILDDIR
/home/marco/src/devel/ikarus/nausicaa/scmobj/=build/./slackware.d
@end example
@end defvar


@defvar slack_REGISTRY
@defvarx slack_REGISTRY_DIR
These are used to select the pathname of the Slackware packages
registry.  The standard package rules will set @var{slack_REGISTRY} to:

@example
$(slack_REGISTRY_DIR)
@end example

@noindent
while the local package rules will set it to:

@example
$(prefix)$(slack_REGISTRY_DIR)
@end example

Example:

@example
$ make echo-variable VARIABLE=slack_REGISTRY_DIR
/var/log/packages
@end example
@end defvar


@defvar slack_INSTALLED_PACKAGE
The definition of this variable tries to read from the system the name
of an already installed package.  It is used to upgrade.

This variable Example (after having installed the package):

@example
$ make echo-variable VARIABLE=slack_INSTALLED_PACKAGE
nausicaa-scmobj-0.1d0-i686-1mm
@end example
@end defvar


@c ------------------------------------------------------------

@subsubheading Makefile rules


@deffn {Makefile Rule} slackware-builddir
If the directory @code{$(slack_BUILDDIR)} does not exist: create it.  To
be invoked as:

@example
$ make slackware-builddir
@end example
@end deffn


@deffn {Makefile Rule} slackware-top-builddir
If the directory @code{$(slack_PACKAGE_TOP_BUILDDIR)} does not exist:
create it.  To be invoked as:

@example
$ make slackware-top-builddir
@end example
@end deffn


@deffn {Makefile Rule} slackware-aux
This is for auxiliary stuff: it is freely available to the user.  It
will be invoked after having installed the files in the temporary
location, and just before running @command{makepkg} (see the
@code{slackware} and @code{local-slackware} rules).

It is not meant to be invoked explicitly.
@end deffn


@deffn {Makefile Rule} slackware-clean
Equivalent to invoke both the @code{slackware-clean-top-builddir} and
@code{slackware-clean-builddir} rules.  To be invoked as:

@example
$ make slackware-clean
@end example
@end deffn


@deffn {Makefile Rule} slackware-clean-top-builddir
Remove the @code{$(slack_PACKAGE_TOP_BUILDDIR)} directory and all its
contents.  To be invoked as:

@example
$ make slackware-clean-top-builddir
@end example
@end deffn


@deffn {Makefile Rule} slackware-clean-builddir
Remove the @code{$(slack_BUILDDIR)} directory and all its contents.  To
be invoked as:

@example
$ make slackware-clean-builddir
@end example
@end deffn


@c ------------------------------------------------------------

@c page
@node slackware standard
@subsection Building standard Slackware packages


A standard Slackware package is a normal Slackware package: a tarball
with @code{.tgz} extension; with the pathnames relative to the root
directory; registered in the @file{/var/log/packages} registry.


@subsubheading Makefile variables


@defvar slackware_STANDARD_ENV
The system environment with which the Slackware package management
scripts will be run.

Example:

@example
$ make echo-list-variable VARIABLE=slackware_STANDARD_ENV
PATH=/sbin:...
slack_PACKAGE_BUILDDIR=/tmp/marco/nausicaa-scmobj-0.1d0
slack_REGISTRY=/var/log/packages
@end example

@noindent
we see that @file{/sbin} has been added to the @env{PATH} variable: this
is because the Slackware management scripts need to find each other.
@end defvar


@c ------------------------------------------------------------

@subsubheading Makefile rules


For all the following rules: root privileges are needed to build a
standard package; so we may want to use a tool like @command{sudo} to
run @command{make}.  In the following we will assume that this is the
case.

Always remember that the @option{-n} option of @gnu{} Make allows us to
see the commands that a rule will execute, without actually executing
them.  Example:

@example
$ make local-slackware-upgrade -n
@end example


@deffn {Makefile Rule} slackware
Build the package and place it into the build directory.  To be invoked
as:

@example
$ sudo make slackware
@end example
@end deffn


@deffn {Makefile Rule} slackware-install
Install the previously built package.  To be invoked as:

@example
$ sudo make slackware-install
@end example
@end deffn


@deffn {Makefile Rule} slackware-remove
Try to upgrade an already installed package with the previously built
package.  To be invoked as:

@example
$ sudo make slackware-remove
@end example

See the @code{slack_INSTALLED_PACKAGE} variable for the name of the
package that will be removed.
@end deffn


@deffn {Makefile Rule} slackware-upgrade
Try to upgrade an already installed package with the previously built
package.  To be invoked as:

@example
$ sudo make slackware-upgrade
@end example

See the @code{slack_INSTALLED_PACKAGE} variable for the name of the
package that will be removed.
@end deffn


@c ------------------------------------------------------------

@c page
@node slackware local
@subsection Building local Slackware packages


A local Slackware package is: a tarball with @code{.tgz} extension; with
the pathnames relative to the selected installation prefix (for example
@file{/usr/local}); registered in the @file{$(prefix)/var/log/packages}
registry, where @code{$(prefix)} is the selected installation prefix.


@subsubheading Makefile variables


@defvar slackware_LOCAL_ENV
The system environment with which the Slackware package management
scripts will be run.

Example:

@example
$ make echo-list-variable VARIABLE=slackware_LOCAL_ENV
PATH=/sbin:...
slack_PACKAGE_BUILDDIR=/tmp/marco/nausicaa-scmobj-0.1d0//usr/local
slack_REGISTRY=/usr/local/var/log/packages
slack_ENV=ROOT=/usr/local
@end example

@noindent
we see that @file{/sbin} has been added to the @env{PATH} variable: this
is because the Slackware management scripts need to find each other.
@end defvar


@c ------------------------------------------------------------

@subsubheading Makefile rules


For all the following rules: root privileges may be needed to build a
local package; so we may want to use a tool like @command{sudo} to run
@command{make}.  In the following we will assume that this is the case.

Always remember that the @option{-n} option of @gnu{} Make allows us to
see the commands that a rule will execute, without actually executing
them.  Example:

@example
$ make local-slackware-upgrade -n
@end example


@deffn {Makefile Rule} local-slackware
Build the package and place it into the build directory.  To be invoked
as:

@example
$ sudo make local-slackware
@end example
@end deffn


@deffn {Makefile Rule} local-slackware-install
Install the previously built package.  To be invoked as:

@example
$ sudo make local-slackware-install
@end example
@end deffn


@deffn {Makefile Rule} local-slackware-remove
Try to upgrade an already installed package with the previously built
package.  To be invoked as:

@example
$ sudo make local-slackware-remove
@end example

See the @code{slack_INSTALLED_PACKAGE} variable for the name of the
package that will be removed.
@end deffn


@deffn {Makefile Rule} local-slackware-upgrade
Try to upgrade an already installed package with the previously built
package.  To be invoked as:

@example
$ sudo make local-slackware-upgrade
@end example

See the @code{slack_INSTALLED_PACKAGE} variable for the name of the
package that will be removed.
@end deffn


@c ------------------------------------------------------------

@c page
@node Documentation License
@appendix GNU Free Documentation License

@cindex FDL, GNU Free Documentation License
@center Version 1.1, March 2000

@display
Copyright @copyright{} 2000 Free Software Foundation, Inc.
59 Temple Place, Suite 330, Boston, MA  02111-1307, USA

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.
@end display

@enumerate 0
@item
PREAMBLE

The purpose of this License is to make a manual, textbook, or other
written document @dfn{free} in the sense of freedom: to assure everyone
the effective freedom to copy and redistribute it, with or without
modifying it, either commercially or noncommercially.  Secondarily,
this License preserves for the author and publisher a way to get
credit for their work, while not being considered responsible for
modifications made by others.

This License is a kind of ``copyleft'', which means that derivative
works of the document must themselves be free in the same sense.  It
complements the GNU General Public License, which is a copyleft
license designed for free software.

We have designed this License in order to use it for manuals for free
software, because free software needs free documentation: a free
program should come with manuals providing the same freedoms that the
software does.  But this License is not limited to software manuals;
it can be used for any textual work, regardless of subject matter or
whether it is published as a printed book.  We recommend this License
principally for works whose purpose is instruction or reference.

@item
APPLICABILITY AND DEFINITIONS

This License applies to any manual or other work that contains a
notice placed by the copyright holder saying it can be distributed
under the terms of this License.  The ``Document'', below, refers to any
such manual or work.  Any member of the public is a licensee, and is
addressed as ``you''.

A ``Modified Version'' of the Document means any work containing the
Document or a portion of it, either copied verbatim, or with
modifications and/or translated into another language.

A ``Secondary Section'' is a named appendix or a front-matter section of
the Document that deals exclusively with the relationship of the
publishers or authors of the Document to the Document's overall subject
(or to related matters) and contains nothing that could fall directly
within that overall subject.  (For example, if the Document is in part a
textbook of mathematics, a Secondary Section may not explain any
mathematics.)  The relationship could be a matter of historical
connection with the subject or with related matters, or of legal,
commercial, philosophical, ethical or political position regarding
them.

The ``Invariant Sections'' are certain Secondary Sections whose titles
are designated, as being those of Invariant Sections, in the notice
that says that the Document is released under this License.

The ``Cover Texts'' are certain short passages of text that are listed,
as Front-Cover Texts or Back-Cover Texts, in the notice that says that
the Document is released under this License.

A ``Transparent'' copy of the Document means a machine-readable copy,
represented in a format whose specification is available to the
general public, whose contents can be viewed and edited directly and
straightforwardly with generic text editors or (for images composed of
pixels) generic paint programs or (for drawings) some widely available
drawing editor, and that is suitable for input to text formatters or
for automatic translation to a variety of formats suitable for input
to text formatters.  A copy made in an otherwise Transparent file
format whose markup has been designed to thwart or discourage
subsequent modification by readers is not Transparent.  A copy that is
not ``Transparent'' is called ``Opaque''.

Examples of suitable formats for Transparent copies include plain
@sc{ascii} without markup, Texinfo input format, La@TeX{} input format,
@acronym{SGML} or @acronym{XML} using a publicly available
@acronym{DTD}, and standard-conforming simple @acronym{HTML} designed
for human modification.  Opaque formats include PostScript,
@acronym{PDF}, proprietary formats that can be read and edited only by
proprietary word processors, @acronym{SGML} or @acronym{XML} for which
the @acronym{DTD} and/or processing tools are not generally available,
and the machine-generated @acronym{HTML} produced by some word
processors for output purposes only.

The ``Title Page'' means, for a printed book, the title page itself,
plus such following pages as are needed to hold, legibly, the material
this License requires to appear in the title page.  For works in
formats which do not have any title page as such, ``Title Page'' means
the text near the most prominent appearance of the work's title,
preceding the beginning of the body of the text.

@item
VERBATIM COPYING

You may copy and distribute the Document in any medium, either
commercially or noncommercially, provided that this License, the
copyright notices, and the license notice saying this License applies
to the Document are reproduced in all copies, and that you add no other
conditions whatsoever to those of this License.  You may not use
technical measures to obstruct or control the reading or further
copying of the copies you make or distribute.  However, you may accept
compensation in exchange for copies.  If you distribute a large enough
number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and
you may publicly display copies.

@item
COPYING IN QUANTITY

If you publish printed copies of the Document numbering more than 100,
and the Document's license notice requires Cover Texts, you must enclose
the copies in covers that carry, clearly and legibly, all these Cover
Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
the back cover.  Both covers must also clearly and legibly identify
you as the publisher of these copies.  The front cover must present
the full title with all words of the title equally prominent and
visible.  You may add other material on the covers in addition.
Copying with changes limited to the covers, as long as they preserve
the title of the Document and satisfy these conditions, can be treated
as verbatim copying in other respects.

If the required texts for either cover are too voluminous to fit
legibly, you should put the first ones listed (as many as fit
reasonably) on the actual cover, and continue the rest onto adjacent
pages.

If you publish or distribute Opaque copies of the Document numbering
more than 100, you must either include a machine-readable Transparent
copy along with each Opaque copy, or state in or with each Opaque copy
a publicly-accessible computer-network location containing a complete
Transparent copy of the Document, free of added material, which the
general network-using public has access to download anonymously at no
charge using public-standard network protocols.  If you use the latter
option, you must take reasonably prudent steps, when you begin
distribution of Opaque copies in quantity, to ensure that this
Transparent copy will remain thus accessible at the stated location
until at least one year after the last time you distribute an Opaque
copy (directly or through your agents or retailers) of that edition to
the public.

It is requested, but not required, that you contact the authors of the
Document well before redistributing any large number of copies, to give
them a chance to provide you with an updated version of the Document.

@item
MODIFICATIONS

You may copy and distribute a Modified Version of the Document under
the conditions of sections 2 and 3 above, provided that you release
the Modified Version under precisely this License, with the Modified
Version filling the role of the Document, thus licensing distribution
and modification of the Modified Version to whoever possesses a copy
of it.  In addition, you must do these things in the Modified Version:

@enumerate A
@item
Use in the Title Page (and on the covers, if any) a title distinct
from that of the Document, and from those of previous versions
(which should, if there were any, be listed in the History section
of the Document).  You may use the same title as a previous version
if the original publisher of that version gives permission.

@item
List on the Title Page, as authors, one or more persons or entities
responsible for authorship of the modifications in the Modified
Version, together with at least five of the principal authors of the
Document (all of its principal authors, if it has less than five).

@item
State on the Title page the name of the publisher of the
Modified Version, as the publisher.

@item
Preserve all the copyright notices of the Document.

@item
Add an appropriate copyright notice for your modifications
adjacent to the other copyright notices.

@item
Include, immediately after the copyright notices, a license notice
giving the public permission to use the Modified Version under the
terms of this License, in the form shown in the Addendum below.

@item
Preserve in that license notice the full lists of Invariant Sections
and required Cover Texts given in the Document's license notice.

@item
Include an unaltered copy of this License.

@item
Preserve the section entitled ``History'', and its title, and add to
it an item stating at least the title, year, new authors, and
publisher of the Modified Version as given on the Title Page.  If
there is no section entitled ``History'' in the Document, create one
stating the title, year, authors, and publisher of the Document as
given on its Title Page, then add an item describing the Modified
Version as stated in the previous sentence.

@item
Preserve the network location, if any, given in the Document for
public access to a Transparent copy of the Document, and likewise
the network locations given in the Document for previous versions
it was based on.  These may be placed in the ``History'' section.
You may omit a network location for a work that was published at
least four years before the Document itself, or if the original
publisher of the version it refers to gives permission.

@item
In any section entitled ``Acknowledgments'' or ``Dedications'',
preserve the section's title, and preserve in the section all the
substance and tone of each of the contributor acknowledgments
and/or dedications given therein.

@item
Preserve all the Invariant Sections of the Document,
unaltered in their text and in their titles.  Section numbers
or the equivalent are not considered part of the section titles.

@item
Delete any section entitled ``Endorsements''.  Such a section
may not be included in the Modified Version.

@item
Do not retitle any existing section as ``Endorsements''
or to conflict in title with any Invariant Section.
@end enumerate

If the Modified Version includes new front-matter sections or
appendices that qualify as Secondary Sections and contain no material
copied from the Document, you may at your option designate some or all
of these sections as invariant.  To do this, add their titles to the
list of Invariant Sections in the Modified Version's license notice.
These titles must be distinct from any other section titles.

You may add a section entitled ``Endorsements'', provided it contains
nothing but endorsements of your Modified Version by various
parties---for example, statements of peer review or that the text has
been approved by an organization as the authoritative definition of a
standard.

You may add a passage of up to five words as a Front-Cover Text, and a
passage of up to 25 words as a Back-Cover Text, to the end of the list
of Cover Texts in the Modified Version.  Only one passage of
Front-Cover Text and one of Back-Cover Text may be added by (or
through arrangements made by) any one entity.  If the Document already
includes a cover text for the same cover, previously added by you or
by arrangement made by the same entity you are acting on behalf of,
you may not add another; but you may replace the old one, on explicit
permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License
give permission to use their names for publicity for or to assert or
imply endorsement of any Modified Version.

@item
COMBINING DOCUMENTS

You may combine the Document with other documents released under this
License, under the terms defined in section 4 above for modified
versions, provided that you include in the combination all of the
Invariant Sections of all of the original documents, unmodified, and
list them all as Invariant Sections of your combined work in its
license notice.

The combined work need only contain one copy of this License, and
multiple identical Invariant Sections may be replaced with a single
copy.  If there are multiple Invariant Sections with the same name but
different contents, make the title of each such section unique by
adding at the end of it, in parentheses, the name of the original
author or publisher of that section if known, or else a unique number.
Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections entitled ``History''
in the various original documents, forming one section entitled
``History''; likewise combine any sections entitled ``Acknowledgments'',
and any sections entitled ``Dedications''.  You must delete all sections
entitled ``Endorsements.''

@item
COLLECTIONS OF DOCUMENTS

You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this
License in the various documents with a single copy that is included in
the collection, provided that you follow the rules of this License for
verbatim copying of each of the documents in all other respects.

You may extract a single document from such a collection, and distribute
it individually under this License, provided you insert a copy of this
License into the extracted document, and follow this License in all
other respects regarding verbatim copying of that document.

@item
AGGREGATION WITH INDEPENDENT WORKS

A compilation of the Document or its derivatives with other separate
and independent documents or works, in or on a volume of a storage or
distribution medium, does not as a whole count as a Modified Version
of the Document, provided no compilation copyright is claimed for the
compilation.  Such a compilation is called an ``aggregate'', and this
License does not apply to the other self-contained works thus compiled
with the Document, on account of their being thus compiled, if they
are not themselves derivative works of the Document.

If the Cover Text requirement of section 3 is applicable to these
copies of the Document, then if the Document is less than one quarter
of the entire aggregate, the Document's Cover Texts may be placed on
covers that surround only the Document within the aggregate.
Otherwise they must appear on covers around the whole aggregate.

@item
TRANSLATION

Translation is considered a kind of modification, so you may
distribute translations of the Document under the terms of section 4.
Replacing Invariant Sections with translations requires special
permission from their copyright holders, but you may include
translations of some or all Invariant Sections in addition to the
original versions of these Invariant Sections.  You may include a
translation of this License provided that you also include the
original English version of this License.  In case of a disagreement
between the translation and the original English version of this
License, the original English version will prevail.

@item
TERMINATION

You may not copy, modify, sublicense, or distribute the Document except
as expressly provided for under this License.  Any other attempt to
copy, modify, sublicense or distribute the Document is void, and will
automatically terminate your rights under this License.  However,
parties who have received copies, or rights, from you under this
License will not have their licenses terminated so long as such
parties remain in full compliance.

@item
FUTURE REVISIONS OF THIS LICENSE

The Free Software Foundation may publish new, revised versions
of the GNU Free Documentation License from time to time.  Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.  See
@uref{http://www.gnu.org/copyleft/}.

Each version of the License is given a distinguishing version number.
If the Document specifies that a particular numbered version of this
License ``or any later version'' applies to it, you have the option of
following the terms and conditions either of that specified version or
of any later version that has been published (not as a draft) by the
Free Software Foundation.  If the Document does not specify a version
number of this License, you may choose any version ever published (not
as a draft) by the Free Software Foundation.
@end enumerate

@page
@appendixsubsec ADDENDUM: How to use this License for your documents

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and
license notices just after the title page:

@smallexample
@group
  Copyright (C)  @var{year}  @var{your name}.
  Permission is granted to copy, distribute and/or modify this document
  under the terms of the GNU Free Documentation License, Version 1.1
  or any later version published by the Free Software Foundation;
  with the Invariant Sections being @var{list their titles}, with the
  Front-Cover Texts being @var{list}, and with the Back-Cover Texts being @var{list}.
  A copy of the license is included in the section entitled ``GNU
  Free Documentation License''.
@end group
@end smallexample

If you have no Invariant Sections, write ``with no Invariant Sections''
instead of saying which ones are invariant.  If you have no
Front-Cover Texts, write ``no Front-Cover Texts'' instead of
``Front-Cover Texts being @var{list}''; likewise for Back-Cover Texts.

If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License,
to permit their use in free software.

@c ------------------------------------------------------------

@c page
@node references
@appendix Bibliography and references



@c ------------------------------------------------------------

@c page
@node concept index
@appendix An entry for each concept
     
@printindex cp
     
@node function index
@appendix An entry for each function. 

@printindex fn

@node variable index
@appendix An entry for each variable. 

@printindex vr

@node type index
@appendix An entry for each type. 

@printindex tp

@contents
@bye

@c end of file
