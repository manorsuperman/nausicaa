To: comp.lang.scheme
Subject: [announce] Nausicaa/LAPACK --- tag 0.1b1

		      Nausicaa/LAPACK
		      ===============

This package is a  distribution of libraries for R6RS Scheme
implementations;  it  provides bindings  for  the CLAPACK  C
language library, a library of linear Algebra algorithms.

  It  is  built  upon  Nausicaa/Scheme, making  use  of  its
foreign-functions   interface.   It   supports   the  Scheme
implementations  Ikarus, Mosh  and  Ypsilon.  The  packaging
infrastructure currently supports only GNU+Linux systems.

  The latest release of Nausicaa/LAPACK is available at:

     <http://github.com/marcomaggi/nausicaa/downloads>

the home page of the Nausicaa project is at:

	<http://marcomaggi.github.com/nausicaa.html>

development takes place at:

    <http://github.com/marcomaggi/nausicaa/tree/master>

the documentation is available on line:

  <http://marcomaggi.github.com/docs/nausicaa-lapack.html>

CLAPACK is available at:

	      <http://www.netlib.org/clapack/>

original documentation  for LAPACK and CLAPACK  can be found
at:

     <http://www.netlib.org/lapack/lug/lapack_lug.html>

and in printed form:

   "LAPACK   Users'   Guide".    Anderson,   Bai,   Bischof,
   Blackford,   Demmel,   Dongarra,   Du  Croz,   Greenbaum,
   Hammarling, McKenney,  Sorensen.  Third Edition.  Society
   for    Industrial   and   Applied    Mathematics,   1999.
   Philadelphia, PA.  ISBN 0-89871-447-8 (paperback).


Notes for --- tag 0.1b1
------------------------------

* Updated to Nausicaa/Scheme 0.1a10.


Notes for 2010-02-10 tag 0.1b0
------------------------------

* Marshaling of  arguments for the  1200+ functions exported
  by the primitives API is automatically generated, using as
  informations the  argument type name and  its proper name;
  unfortunately some  couples type/name do  not identify how
  the argument is used.

  For example,  we know that  the argument "real*  scale" is
  always a  single real value, while the  argument "real* s"
  some times  is a single real  value and other  times is an
  array of real values.

  This will  cause incorrect handling of  arguments for some
  functions  until all  the  errors are  catched and  fixed;
  fixing these errors  is easy and can be  done quickly.  If
  you stumble on such problem please file a bug report.

* With Ypsilon, one test in the test suite will fail because
  (for reasons I do not want to know):

  $ ypsilon
  > (magnitude 0.0i)
  +nan.0


### end of file
# Local Variables:
# mode: text
# fill-column: 60
# paragraph-start: "*"
# End:
