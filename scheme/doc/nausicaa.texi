\input texinfo.tex
@c %**start of header
@setfilename nausicaa.info
@settitle Nausicaa for Scheme
@c %**end of header

@c page
@c ------------------------------------------------------------
@c Macros.
@c ------------------------------------------------------------

@include version.texiinc

@macro gnu{}
@acronym{GNU}
@end macro

@macro gpl{}
@acronym{GPL}
@end macro

@macro fdl{}
@acronym{FDL}
@end macro

@c ------------------------------------------------------------
@c Special notes.
@c ------------------------------------------------------------

@macro forunix{}
@strong{Unix:}
@end macro

@macro fixme{TEXT}
@strong{FIXME: \TEXT\}
@end macro

@c ------------------------------------------------------------
@c Scheme related macros.
@c ------------------------------------------------------------

@macro rnrs{VERSION}
@acronym{R\VERSION\RS}
@end macro

@macro rsix{}
Revised^6 Report on the algorithmic language Scheme
@end macro

@macro repl{}
@acronym{REPL}
@end macro

@macro srfi{}
@acronym{SRFI}
@end macro

@c Separating the @srfi{} macro from the number with a '--' rather than
@c a '-'  makes the expansion look  ugly in menu entries  under the Info
@c reader.  IMHO  this should not happen,  but it does; so  we live with
@c this, because the main purpose of this document is to provide an Info
@c version.
@macro ansrfi{NUM}
@srfi{}-\NUM\
@end macro

@macro clos{}
@acronym{CLOS}
@end macro

@macro library{SPEC}
@code{(\SPEC\)}
@end macro

@macro ffi{}
@acronym{FFI}
@end macro

@macro class{NAME}
@code{<\NAME\>}
@end macro

@macro aclass{NAME}
<\NAME\>
@end macro

@macro cclass{NAME}
<\NAME\>
@end macro

@macro objtype{NAME}
@code{\NAME\}
@end macro

@macro condition{NAME}
@code{&\NAME\}
@end macro

@macro enum{NAME}
@code{enum-\NAME\}
@end macro

@macro rtd{}
@acronym{RTD}
@end macro

@c ------------------------------------------------------------
@c Miscellaneous acronyms.
@c ------------------------------------------------------------

@macro ansi{}
@acronym{ANSI}
@end macro

@macro api{}
@acronym{API}
@end macro

@c Remember that @url is already used by Texinfo.
@macro aurl{}
@acronym{URL}
@end macro

@macro ascii{}
@acronym{ASCII}
@end macro

@macro cpu{}
@acronym{CPU}
@end macro

@macro csv{}
@acronym{CSV}
@end macro

@macro ieee{}
@acronym{IEEE}
@end macro

@macro iso{}
@acronym{ISO}
@end macro

@macro json{}
@acronym{JSON}
@end macro

@macro posix{}
@acronym{POSIX}
@end macro

@macro rfc{}
@acronym{RFC}
@end macro

@macro uid{}
@acronym{UID}
@end macro

@macro uri{}
@acronym{URI}
@end macro

@macro utf{}
@acronym{UTF}
@end macro

@macro utc{}
@acronym{UTC}
@end macro

@macro tai{}
@acronym{TAI}
@end macro

@macro dst{}
@acronym{DST}
@end macro

@macro gmt{}
@acronym{GMT}
@end macro

@macro jdn{}
@acronym{JDN}
@end macro

@macro mjdn{}
@acronym{MJDN}
@end macro

@macro axml{}
@acronym{XML}
@end macro


@c ------------------------------------------------------------
@c Software acronyms.
@c ------------------------------------------------------------

@macro gmp{}
@acronym{GMP}
@end macro

@macro gcc{}
@acronym{GCC}
@end macro

@c ------------------------------------------------------------
@c Network related acronyms.
@c ------------------------------------------------------------

@macro http{}
@acronym{HTTP}
@end macro

@macro ftp{}
@acronym{FTP}
@end macro

@macro ip{}
@acronym{IP}
@end macro

@macro tcp{}
@acronym{TCP}
@end macro

@macro udp{}
@acronym{UDP}
@end macro

@macro smtp{}
@acronym{SMTP}
@end macro

@c ------------------------------------------------------------
@c Scheme language macros.
@c ------------------------------------------------------------

@macro func{NAME}
@code{\NAME\}
@end macro

@macro snull{}
@code{()}
@end macro

@macro true{}
@code{#t}
@end macro

@macro false{}
@code{#f}
@end macro

@macro keyword{NAME}
@code{#:\NAME\}
@end macro

@c ------------------------------------------------------------
@c C language macros.
@c ------------------------------------------------------------

@macro cfunc{NAME}
@code{\NAME\()}
@end macro

@macro cnull{}
@code{NULL}
@end macro

@c ------------------------------------------------------------
@c Macros for references to external documents.
@c ------------------------------------------------------------

@macro glibcref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,libc}
@end macro

@c @macro rsixref{NODE, TITLE}
@c @ref{\NODE\,\TITLE\,\TITLE\,r6rs}
@c @end macro

@macro bibref{TAG}
@code{[\TAG\]}
@end macro

@macro autoconfref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,autoconf}
@end macro

@macro nauref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,nausicaa}
@end macro

@c ------------------------------------------------------------
@c RNRS document macros.
@c ------------------------------------------------------------

@macro rsixlibrary{THING}
@code{(rnrs \THING\ (6))}
@end macro

@c The following macro does not work.  It appears that it is not
@c possible to use "@cindex" in the expansion of a macro because the DVI
@c output will not work.  Texinfo output would work, though.  Tested
@c with "texi2dvi" version 1.135 (GNU Texinfo 4.13).
@c
@c @macro cindexRsixlibrary{THING}
@c @cindex @rsixlibrary{\THING\}, library
@c @cindex Library, @rsixlibrary{\THING\}
@c @end macro

@macro arbno{THING}
\THING\*
@end macro

@macro atleastone{THING}
\THING\+
@end macro

@c ------------------------------------------------------------
@c To be used in normal text.

@macro meta{THING}
@var{<\THING\>}
@end macro

@macro metao{THING}
@var{<\THING\0>}
@end macro

@macro metai{THING}
@var{<\THING\1>}
@end macro

@macro metaii{THING}
@var{<\THING\2>}
@end macro

@macro metaiii{THING}
@var{<\THING\3>}
@end macro

@macro metan{THING}
@var{<\THING\N>}
@end macro

@macro metani{THING}
@var{<\THING\N+1>}
@end macro

@c ------------------------------------------------------------
@c To be used inside @example environment and @samp directives.

@macro cmeta{THING}
@var{<\THING\>}
@end macro

@macro cmetao{THING}
@var{<\THING\0>}
@end macro

@macro cmetai{THING}
@var{<\THING\1>}
@end macro

@macro cmetaii{THING}
@var{<\THING\2>}
@end macro

@macro cmetaiii{THING}
@var{<\THING\3>}
@end macro

@macro cmetan{THING}
@var{<\THING\N>}
@end macro

@macro cmetani{THING}
@var{<\THING\N+1>}
@end macro

@c ------------------------------------------------------------
@c To be used inside argument lists.

@macro ameta{THING}
@var{<\THING\>}
@end macro

@macro ametao{THING}
@var{<\THING\0>}
@end macro

@macro ametai{THING}
@var{<\THING\1>}
@end macro

@macro ametaii{THING}
@var{<\THING\2>}
@end macro

@macro ametaiii{THING}
@var{<\THING\3>}
@end macro

@macro ametan{THING}
@var{<\THING\N>}
@end macro

@macro ametani{THING}
@var{<\THING\N+1>}
@end macro

@c ------------------------------------------------------------

@macro hyper{THING}
@var{<\THING\>}
@end macro

@macro hyperi{THING}
@var{<\THING\1>}
@end macro

@macro hyperii{THING}
@var{<\THING\2>}
@end macro

@macro hyperiii{THING}
@var{<\THING\3>}
@end macro

@macro hypern{THING}
@var{<\THING\n>}
@end macro

@c ------------------------------------------------------------

@macro varo{THING}
@var{\THING\0}
@end macro

@macro vari{THING}
@var{\THING\1}
@end macro

@macro varii{THING}
@var{\THING\2}
@end macro

@macro variii{THING}
@var{\THING\3}
@end macro

@macro variv{THING}
@var{\THING\4}
@end macro

@macro varn{THING}
@var{\THING\n}
@end macro

@macro varni{THING}
@var{\THING\n+1}
@end macro

@macro vark{THING}
@var{\THING\k}
@end macro

@macro varj{THING}
@var{\THING\j}
@end macro

@c page
@c ------------------------------------------------------------
@c Values.
@c ------------------------------------------------------------

@set TITLE                      Nausicaa for Scheme

@c To be used as @value{PACKAGE} whenever we need to include the full
@c name of this package.
@set PACKAGE                    Nausicaa/Scheme

@c To be used as @value{PACKAGE_NICKNAME} whenever we need to include
@c the nickname of the project: the name that is used to compose the
@c distribution tarball or the web address.
@set PACKAGE_NICKNAME           nausicaa

@c To be used as @value{AUTHOR} whenever we need to include the list of
@c authors of this document.
@set AUTHOR                     Marco Maggi

@c To be used as @value{AUTHOR_EMAIL} whenever we need to include the
@c email of the *single* author of this document.
@set AUTHOR_EMAIL               @email{marco.maggi-ipsu@@poste.it}

@c To be used as @value{COPYRIGHT_YEARS} whenever we need to include the
@c list of copyright years.
@set COPYRIGHT_YEARS            2008, 2009, 2010


@c page
@c ------------------------------------------------------------
@c Copyright notice.
@c ------------------------------------------------------------

@copying
@noindent
This document describes version @version{} of @value{PACKAGE}, a set of
Scheme libraries defining a slightly modified @rnrs{6} Scheme language
and augmenting the features of the base and standard @rnrs{6} libraries.

The project home page of Nausicaa is at:

@center @url{http://marcomaggi.github.com/nausicaa.html}

@noindent
development of Nausicaa takes place at:

@center @url{http://github.com/marcomaggi/nausicaa/}

@noindent
Copyright @copyright{} @value{COPYRIGHT_YEARS} by @value{AUTHOR}.@*
Copyright @copyright{} 1996, 1997, 2000, 2001, 2002, 2003, 2004, 2005
Free Software Foundation.@*
Copyright @copyright{} 1996, 1999-2005 Dorai Sitaram.@*
Copyright @copyright{} 1998 Oleg Kiselyov.@*
Copyright @copyright{} 1998, 1999, 2000 Olin Shivers.@*
Copyright @copyright{} 1999 John David Stone.@*
Copyright @copyright{} 1999, 2002 Marc Feeley.@*
Copyright @copyright{} 2001, 2009 Danny Dube'@*
Copyright @copyright{} 2002 Dr. Mirko Luedde.@*
Copyright @copyright{} 2002, 2003, 2005, 2006 Sebastian Egner.@*
Copyright @copyright{} 2003 Ray Dillinger.@*
Copyright @copyright{} 2003 Taylor Campbell.@*
Copyright @copyright{} 2005 Jens Axel Soegaard.@*
Copyright @copyright{} 2005-2009 Alex Shinn.@*
Copyright @copyright{} 2008 Taro Minowa (Higepon).@*
Copyright @copyright{} 2005-2008 Dominique Boucher.@*
Copyright @copyright{} 2004, 2005 Tony Garnock-Jones@*
Copyright @copyright{} 2005 LShift Ltd.@*
Copyright @copyright{} 2007, 2008 Philip L. Bewig.@*
Copyright @copyright{} 2000 Will Fitzgerald.@*
Copyright @copyright{} 2000 Neodesic Corporation.@*
Copyright @copyright{} 2000-2006 Joachim Henke.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the @gnu{} Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections being ``@gnu{} Free Documentation License'' and
``@gnu{} General Public License'', no Front--Cover Texts, and no
Back--Cover Texts.  A copy of the license is included in the section
entitled ``@gnu{} Free Documentation License''.
@end quotation

This document embeds an unofficial assemblage of several documents
reformatted in Texinfo; the reformatting author and maintainer is
@value{AUTHOR} @value{AUTHOR_EMAIL}.  See the appendix ``Credits'' for
the list of original documents and their authors.  See also the
@file{README} and @file{CREDITS} files for additional attributions.
@end copying

@c page
@c ------------------------------------------------------------
@c Headers.
@c ------------------------------------------------------------

@titlepage
@title @value{TITLE}
@subtitle Version @version{}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c ------------------------------------------------------------

@ifinfo
@dircategory Development
@direntry
* nausicaa: (nausicaa).         @value{TITLE}.
@end direntry
@end ifinfo

@c ------------------------------------------------------------

@ignore
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex fn cp
@end ignore

@c page
@ifnottex
@node Top
@top @value{TITLE}

@insertcopying

@menu
* overview::                    Overview of @value{PACKAGE}.
* scheme::                      The Scheme language.
* baselib::                     Base library.
* stdlib::                      Standard libraries.
* nausicaa::                    The @library{nausicaa} language.

Libraries in the @library{nausicaa} language

* cond-expand::                 Feature-based conditional expansion.
* unimplemented::               Unimplemented error condition.
* conditions::                  More condition types.
* lang::                        Simple language extensions.
* syntax utils::                Syntax utilities.
* pretty-print::                Pretty printing.
* parameters::                  Parameter objects.
* shared-structures::           External representation for data
                                with shared structure.
* sentinel::                    The sentinel value.
* getenv::                      Accessing system environment variables.
* configuration::               Overall configuration.
* assertions::                  Organising assertions.
* contracts::                   Function call contracts.
* makers::                      Maker syntaxes.
* identifier alists::           Alist of identifiers.
* identifier properties::       Expand--time identifier properties.
* classes::                     Record utilities.
* generics::                    Multimethods dispatching.
* compensations::               Compensation stacks.
* deferred exceptions::         Deferred exceptions.

More libraries

* ffi::                         Foreign functions interface.
* type utils::                  Type utilities.
* enumerations::                Enumeration sets utilities.
* lists::                       Lists library.
* char-sets::                   Character sets library.
* asciis::                      @ascii{} characters library.
* strings::                     Strings library.
* vectors::                     Vectors library.
* bytevectors::                 Bytevectors.
* arrays::                      Multidimensional arrays.
* streams::                     Streams library.
* comparisons::                 Comparison functions.
* loops::                       Loop constructs.
* random::                      Sources of random bits.
* msgcat::                      Messages catalog for internationalisation.
* time::                        Time data types and procedures.
* format::                      Formatting strings.
* checks::                      Lightweight testing.
* debugging::                   Debugging utilities.
* queues::                      Simple queues.
* stacks::                      Simple stacks.
* object-properties::           Object properties.
* cleanup-handlers::            Cleaning up.
* combinators::                 Combinators.
* keywords::                    Keyword values.
* variables::                   Defining storage locations.
* matches::                     Pattern matching.
* irregex::                     IrRegular expressions.
* pregexp::                     Portable regular expressions for Scheme.
* parser-tools::                Lexer and parser utilities.
* silex::                       A lexical analyser generator.
* lalr::                        A LALR(1) parser generator.
* packrat::                     Packrat parser.
* csv::                         Comma--separated values (@acronym{CSV}) utilities.
* email::                       Email processing.
* infix::                       Infix notation utilities.
* getopts::                     Parsing command line arguments.
* armor::                       @ascii{} armor encoding/decoding.
* json::                        Parsing and generating @json{} text.
* net::                         Network--related libraries.
* uri::                         Uniform resource identifiers.
* libraries::                   Libraries inspection.
* submodules::                  Nested modules.
* interps::                     Evaluating code as in an interpreter.
* evaluations::                 Evaluating code in a limited environment.
* r6rs::                        Tools for handling @rnrs{6} source code.
* markups::                     Processing @axml{} documents.

Low level libraries

* kmp::                         Knuth--Morris--Pratt searching.
* one-dimension::               One dimensional extended ranges.
* symbols-tree::                Search tree for lists of symbols.

Appendices

* notes::                       Miscellaneous notes on everything.
* examples::                    Scheme programming examples.
* binfmt::                      Launching programs directly.
* credits::                     Credits.
* Package License::             @gnu{} General Public License.
* Documentation License::       @gnu{} Free Documentation License.
* references::                  Bibliography and references.

Indexes

* concept index::               An entry for each concept.
* function index::              An entry for each function.
* variable index::              An entry for each variable.
* type index::                  An entry for each type.

@end menu

@end ifnottex

@c page
@c chapters on basic language

@include overview.texiinc
@include scheme.texiinc
@include baselib.texiinc
@include stdlib.texiinc
@include nausicaa.texiinc

@c chapters on core libraries

@include cond-expand.texiinc
@include unimplemented.texiinc
@include conditions.texiinc
@include lang.texiinc
@include syntax-utilities.texiinc
@include pretty-print.texiinc
@include parameters.texiinc
@include shared-structures.texiinc
@include sentinel.texiinc
@include getenv.texiinc
@include configuration.texiinc
@include assertions.texiinc
@include contracts.texiinc
@include makers.texiinc
@include identifier-alists.texiinc
@include identifier-properties.texiinc
@include classes.texiinc
@include generics.texiinc
@include compensations.texiinc
@include deferred-exceptions.texiinc

@c chapters on more libraries

@include ffi.texiinc
@include type-utilities.texiinc
@include enumerations.texiinc
@include lists.texiinc
@include char-sets.texiinc
@include asciis.texiinc
@include strings.texiinc
@include vectors.texiinc
@include bytevectors.texiinc
@include arrays.texiinc
@include streams.texiinc
@include comparisons.texiinc
@include loops.texiinc
@include random.texiinc
@include msgcat.texiinc
@include time.texiinc
@include formations.texiinc
@include checks.texiinc
@include debugging.texiinc
@include queues.texiinc
@include stacks.texiinc
@include object-properties.texiinc
@include cleanup-handlers.texiinc
@include combinators.texiinc
@include keywords.texiinc
@include variables.texiinc
@include matches.texiinc
@include irregex.texiinc
@include pregexp.texiinc
@include parser-tools.texiinc
@include silex.texiinc
@include lalr.texiinc
@include packrat.texiinc
@include csv.texiinc
@include email.texiinc
@include infix.texiinc
@include getopts.texiinc
@include armor.texiinc
@include json.texiinc
@include net.texiinc
@include uri.texiinc
@include libraries.texiinc
@include submodules.texiinc
@include interps.texiinc
@include evaluations.texiinc
@include r6rs.texiinc
@include markups.texiinc

@c chapters on low level libraries

@include kmp.texiinc
@include one-dimension.texiinc
@include symbols-tree.texiinc

@c appendices

@include notes.texiinc
@include examples.texiinc
@include binfmt.texiinc
@include credits.texiinc

@c licenses

@include gpl-3.0.texiinc
@include fdl-1.3.texiinc

@c indices

@include references.texiinc
@include index-concept.texiinc
@include index-function.texiinc
@include index-variable.texiinc
@include index-type.texiinc

@contents
@bye

@c end of file
@c Local Variables:
@c mode: texinfo
@c TeX-master: t
@c End:
