;;;
;;;Part of: Nausicaa/Scheme
;;;Contents: size of platform C language types
;;;Date: Mon Nov 24, 2008
;;;
;;;Abstract
;;;
;;;
;;;
;;;Copyright (c) 2008-2010 Marco Maggi <marco.maggi-ipsu@poste.it>
;;;
;;;This program is free software:  you can redistribute it and/or modify
;;;it under the terms of the  GNU General Public License as published by
;;;the Free Software Foundation, either version 3 of the License, or (at
;;;your option) any later version.
;;;
;;;This program is  distributed in the hope that it  will be useful, but
;;;WITHOUT  ANY   WARRANTY;  without   even  the  implied   warranty  of
;;;MERCHANTABILITY  or FITNESS FOR  A PARTICULAR  PURPOSE.  See  the GNU
;;;General Public License for more details.
;;;
;;;You should  have received  a copy of  the GNU General  Public License
;;;along with this program.  If not, see <http://www.gnu.org/licenses/>.
;;;


(library (ffi sizeof)
  (export

    LIBC_SHARED_OBJECT_SPEC

    define-sizeof-utils
    c-sizeof			c-strideof
    c-alignof			c-valueof

    pointer-integer
    size_t-integer		ssize_t-integer

    words-bigendian
    on-64-bits-system		on-32-bits-system
    (rename (on-32-bits-system on-32-bits-systems)
	    (on-64-bits-system on-64-bits-systems)))
  (import (rnrs))


(define-syntax define-sizeof-utils
  (syntax-rules ()
    ((_)
     (begin
       (define-syntax c-sizeof
	 (lambda (stx)

	   (define (%type->id prefix type)
	     (string->symbol (string-append prefix (symbol->string (syntax->datum type)))))
	   (define (%type->sizeof type)
	     (%type->id "sizeof-" type))
	   (define (%type->strideof type)
	     (%type->id "strideof-" type))

	   (syntax-case stx ()

	     ((_ ?type ?number-of-elements)
	      (identifier? #'?type)
	      (with-syntax ((STRIDEOF (datum->syntax #'c-sizeof (%type->strideof #'?type))))
		#'(* STRIDEOF ?number-of-elements)))

	     ((?k ?type)
	      (identifier? #'?type)
	      (with-syntax ((SIZEOF (datum->syntax #'c-sizeof (%type->sizeof #'?type))))
		#'(begin SIZEOF)))

	     (?input-form
	      (syntax-violation 'c-sizeof
		"invalid C language sizeof specification"
		(syntax->datum #'?input-form))))))

       (define-syntax c-strideof
	 (lambda (stx)
	   (define (%type->strideof type)
	     (string->symbol (string-append "strideof-" (symbol->string (syntax->datum type)))))
	   (syntax-case stx ()

	     ((_ ?type)
	      (identifier? #'?type)
	      (with-syntax ((STRIDEOF (datum->syntax #'c-strideof (%type->strideof #'?type))))
		#`(begin STRIDEOF)))

	     (?input-form
	      (syntax-violation 'c-strideof
		"invalid C language strideof specification"
		(syntax->datum #'?input-form))))))

       (define-syntax c-alignof
	 (lambda (stx)
	   (define (%type->alignof type)
	     (string->symbol (string-append "alignof-" (symbol->string (syntax->datum type)))))
	   (syntax-case stx ()

	     ((_ ?type)
	      (identifier? #'?type)
	      (with-syntax ((ALIGNOF (datum->syntax #'c-alignof (%type->alignof #'?type))))
		#`(begin ALIGNOF)))

	     (?input-form
	      (syntax-violation 'c-alignof
		"invalid C language alignof specification"
		(syntax->datum #'?input-form))))))

       (define-syntax c-valueof
	 (lambda (stx)
	   (define (%type->valueof type)
	     (string->symbol (string-append "valueof-" (symbol->string (syntax->datum type)))))
	   (syntax-case stx ()

	     ((_ ?type)
	      (identifier? #'?type)
	      (with-syntax ((VALUEOF (datum->syntax #'c-valueof (%type->valueof #'?type))))
		#`(begin VALUEOF)))

	     (?input-form
	      (syntax-violation 'c-valueof
		"invalid C language valueof specification"
		(syntax->datum #'?input-form))))))
       ))))

(define-sizeof-utils)


(define sizeof-int8			@SIZEOF_INT8@)
(define sizeof-int16			@SIZEOF_INT16@)
(define sizeof-int32			@SIZEOF_INT32@)
(define sizeof-int64			@SIZEOF_INT64@)
(define sizeof-char			@SIZEOF_CHAR@)
(define sizeof-short			@SIZEOF_SHORT_INT@)
(define sizeof-int			@SIZEOF_INT@)
(define sizeof-long			@SIZEOF_LONG@)
(define sizeof-long-long		@SIZEOF_LLONG@)
(define sizeof-float			@SIZEOF_FLOAT@)
(define sizeof-double			@SIZEOF_DOUBLE@)
(define sizeof-long-double		@SIZEOF_LONG_DOUBLE@)
(define sizeof-pointer			@SIZEOF_POINTER@)
(define sizeof-size_t			@SIZEOF_SIZE_T@)
(define sizeof-ssize_t			@SIZEOF_SSIZE_T@)

(define alignof-int8			@ALIGNOF_INT8@)
(define alignof-int16			@ALIGNOF_INT16@)
(define alignof-int32			@ALIGNOF_INT32@)
(define alignof-int64			@ALIGNOF_INT64@)
(define alignof-char			@ALIGNOF_CHAR@)
(define alignof-short			@ALIGNOF_SHORT_INT@)
(define alignof-int			@ALIGNOF_INT@)
(define alignof-long			@ALIGNOF_LONG@)
(define alignof-long-long		@ALIGNOF_LLONG@)
(define alignof-float			@ALIGNOF_FLOAT@)
(define alignof-double			@ALIGNOF_DOUBLE@)
(define alignof-long-double		@ALIGNOF_LONG_DOUBLE@)
(define alignof-pointer			@ALIGNOF_POINTER@)
(define alignof-size_t			@ALIGNOF_SIZE_T@)
(define alignof-ssize_t			@ALIGNOF_SSIZE_T@)

(define strideof-int8			@STRIDEOF_INT8@)
(define strideof-int16			@STRIDEOF_INT16@)
(define strideof-int32			@STRIDEOF_INT32@)
(define strideof-int64			@STRIDEOF_INT64@)
(define strideof-char			@STRIDEOF_CHAR@)
(define strideof-short			@STRIDEOF_SHORT_INT@)
(define strideof-int			@STRIDEOF_INT@)
(define strideof-long			@STRIDEOF_LONG@)
(define strideof-long-long		@STRIDEOF_LLONG@)
(define strideof-float			@STRIDEOF_FLOAT@)
(define strideof-double			@STRIDEOF_DOUBLE@)
(define strideof-long-double		@STRIDEOF_LONG_DOUBLE@)
(define strideof-pointer		@STRIDEOF_POINTER@)
(define strideof-size_t			@STRIDEOF_SIZE_T@)
(define strideof-ssize_t		@STRIDEOF_SSIZE_T@)

(define valueof-char-max		@VALUEOF_CHAR_MAX@)
(define valueof-char-min		@VALUEOF_CHAR_MIN@)
(define valueof-schar-max		@VALUEOF_SCHAR_MAX@)
(define valueof-schar-min		@VALUEOF_SCHAR_MIN@)
(define valueof-uchar-max		@VALUEOF_UCHAR_MAX@)
(define valueof-shrt-max		@VALUEOF_SHRT_MAX@)
(define valueof-shrt-min		@VALUEOF_SHRT_MIN@)
(define valueof-ushrt-max		@VALUEOF_USHRT_MAX@)
(define valueof-int-max			@VALUEOF_INT_MAX@)
(define valueof-int-min			@VALUEOF_INT_MIN@)
(define valueof-uint-max		@VALUEOF_UINT_MAX@)
(define valueof-long-max		@VALUEOF_LONG_MAX@)
(define valueof-long-min		@VALUEOF_LONG_MIN@)
(define valueof-ulong-max		@VALUEOF_ULONG_MAX@)
(define valueof-long-long-max		@VALUEOF_LLONG_MAX@)
(define valueof-long-long-min		@VALUEOF_LLONG_MIN@)
(define valueof-ulong-long-max		@VALUEOF_ULLONG_MAX@)
(define valueof-wchar-max		@VALUEOF_WCHAR_MAX@)
(define valueof-ssize-max		@VALUEOF_SSIZE_MAX@)

(define pointer-integer			(quote @TYPEOF_POINTER_INTEGER@))
(define size_t-integer			(quote @TYPEOF_SIZE_T@))
(define ssize_t-integer			(quote @TYPEOF_SSIZE_T@))

(define on-32-bits-system		(= sizeof-int 4))
(define on-64-bits-system		(= sizeof-int 8))

(define words-bigendian			@WORDS_BIGENDIAN@)

(define LIBC_SHARED_OBJECT_SPEC		"@LIBC_SHARED_OBJECT_SPEC@")


;;;; done

)

;;; end of file
