* documentation

  Document  somewhere that  ypsilon requires  the --compatible  flag, or
  remove the need for --compatible.

* nausicaa
* DONE makers
* classes
* generics

  Profile and improve method dispatching.

* DONE lists
* DONE char-set
* email

** addresses

   Scan RFC 2822 and adjust the (email addresses) library accordingly.

** headers

   Scan RFC 2822 and implement (email addresses) accordingly.

** date

   Scan RFC 2822 and implement (email date) accordingly.

* ffi

  Port all the extension packages to FFI 0.2.

* format

  Finish testing.

  Review and finish the documentation.

  Solve problems with Mosh.

  Change the interface to use the (sexps) macros to specify formatting
  parameters.

* comparisons

  * Finish testing

* times-and-dates

  Rewrite and redocument

* strings

  Fix the names of the fold functions, armonising them with lists.

  Implement the syntaxes for fold.

  Implement the syntaxes for map and /with-index?

  Visit the following Wikipedia pages:
  http://en.wikipedia.org/wiki/Edit_distance
  http://en.wikipedia.org/wiki/Levenshtein_distance
  http://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance

* DONE vectors

  Finished.

* random

  Implement the r250/521 PRGN from the C sources.

  Add a randomness source reading bytes from a given port?

  Finish port from the GSL PRNGs?

  Port the number distributions from the GSL?

* DONE arrays

  Done.

* sequence

  Implement a library offering a common interface for all the sequences:
  vector, list, string, bytevectors.

* DONE interp

  Done.

* irregex

  Write a record type for the match data.

  Write a record type for the chunker.

  Remove from  the library  the code related  to UTF8  strings.  Useless
  with R6RS strings because they are sequences of Unicode code points.

  Port  the library from  the built-in  char-sets implementation  to the
  (char-sets) library.

* DONE pregexp

  Done.

* DONE scmobj

  Done.

* DONE silex

  Done.

* DONE lalr

  Finished.

* gcc

  Do a library  that runs GCC on files under  (by default) TMPDIR.  Make
  it compile object files and build shared libraries.

  Add functions to write a C source file from a Scheme quoted list.  The
  Scheme list  allows quasiquotation to be  used to build  the C source.
  Then just  display the list  into a string  port and trim  the parens,
  which  will be the  first and  last characters  of the  output string.
  Finally write the string to disk.

  Use the FFI to load the shared library and run the function.

* DONE matches
* TODO packrat

  Implement the :one and :any combinators, like the ones in (sexps).

* DONE armor
* TODO libraries

  Finish the libraries inspector.

* DONE contracts

