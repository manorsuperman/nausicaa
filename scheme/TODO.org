* documentation

  Differentiate between @meta inside normal text and @meta inside
  examples, @samp, etc.

* nausicaa

  XXX

* lists

  Finished(?)

* char-set

  Merge the one-dimension  library into char-sets to make  it faster (it
  is too slow now).

* foreign

  Move the  array peeker/pokers in  the implementation compat  files and
  optimise them.

  Review the documentation.

  Add callbacks.

* format

  Finish testing.

  Review and finish the documentation.

  Solve problems with Mosh.

* comparisons

  * Finish testing

* args-fold

  Port it from srfi to scheme projects.

* streams

  Port it from srfi to scheme projects.

* time

  Port it from srfi to scheme projects.

  Rewrite?

* strings

  Fix the names of the fold functions, armonising them with lists.

  Implement the syntaxes for fold.

  Implement the syntaxes for map and /with-index?

  Visit the following Wikipedia pages:
  http://en.wikipedia.org/wiki/Edit_distance
  http://en.wikipedia.org/wiki/Levenshtein_distance
  http://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance

* vectors

  Finished.

* random

  Implement the r250/521 PRGN from the C sources.

  Fix the generator of sequences with given sum (notice that the test in
  the  test   suite  is   commented  out).   Update   the  documentation
  accordingly.

  Add a randomness source reading bytes from a given port?

  Finish port from the GSL PRNGs?

  Port the number distributions from the GSL?

* arrays

  Finished?

* sequence

  Implement a library offering a common interface for all the sequences:
  vector, list, string, bytevectors.

* interp

  Implement the interpreters library.

* irregex

  Write a record type for the match data.

  Write a record type for the chunker.

  Remove from  the library  the code related  to UTF8  strings.  Useless
  with R6RS strings because they are sequences of Unicode code points.

  Port  the library from  the built-in  char-sets implementation  to the
  (char-sets) library.

* pregexp

  Replace calls to PREGEXP-ERROR with the appropriates error forms.

  Replace PREGEXP-REVERSE! with REVERSE! from (lists)

* scmobj

  Finished?

* silex

  Done?

* lalr

  Finished.

* email

  Implement the (email headers) library using (lalr), see RFC 2822.

  Implement the (email date) library using (lalr), see RFC 2822.

* gcc

  Do a library  that runs GCC on files under  (by default) TMPDIR.  Make
  it compile object files and build shared libraries.

  Add functions to write a C source file from a Scheme quoted list.  The
  Scheme list  allows quasiquotation to be  used to build  the C source.
  Then just  display the list  into a string  port and trim  the parens,
  which  will be the  first and  last characters  of the  output string.
  Finally write the string to disk.

  Use the FFI to load the shared library and run the function.

* matches

  Rewrite the OR pattern: expanding it in some cases generates too much
  code making the execution time too long.  Example:

    (check
      (let ((init-value		1)
	    (init-thunk		2)
	    (accessor		3)
	    (accessor-before	4)
	    (accessor-after	5)
	    (mutator		6)
	    (mutator-before	7)
	    (mutator-after	8))
	(match '((init-value 91)
		 (init-thunk 92))
	  (((or ('init-value		init-value)
 		('init-thunk		init-thunk)
 		('accessor		accessor)
 		('accessor-before	accessor-before)
 		('accessor-after	accessor-after)
 		('mutator		mutator)
		('mutator-before	mutator-before)
		('mutator-after		mutator-after))
	    ...)
	   (list init-value
		 init-thunk
		 accessor
		 accessor-before
		 accessor-after
		 mutator
		 mutator-before
		 mutator-after))))
    => '(1 2 3 4 5 6 7 8))

* nos

  Write the documentation section about the record type protocol.

  Profile and improve method dispatching.

* packrat

  Implement the :one and :any combinators, like the ones in (sexps).

