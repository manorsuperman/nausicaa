
		      Credits for Nausicaa/Scheme
		      ===========================


This  file  is  for  credits  notes  about the  code  in  this  package.
Additional credits for the  documentation, are in the "Credits" appendix
of the documentation file in Texinfo format.

char-sets.sls
-------------

char-sets/blocks.sls
--------------------

char-sets/categories.sls
------------------------

checks.sls
----------

cleanup-handlers.sls
--------------------


combinators.sls
---------------

comparisons.sls
---------------

This library is derived from  the reference implementation of SRFI-67 by
Sebastian Egner and Jens Axel Soegaard.


foreign.sls
-----------

foreign/cstring.sls
-------------------

foreign/errno.sls
-----------------

foreign/ffi.sls
---------------

foreign/ffi/compat.ikarus.sls
-----------------------------


foreign/ffi/compat.larceny.sls
------------------------------

foreign/ffi/compat.mosh.sls
---------------------------

foreign/ffi/compat.ypsilon.sls
------------------------------

foreign/ffi/sizeof.sls
----------------------

foreign/guarded-malloc.sls
--------------------------

foreign/memory.sls
------------------

foreign/memory/compat.ikarus.sls
--------------------------------

foreign/memory/compat.larceny.sls
---------------------------------

foreign/memory/compat.mosh.sls
------------------------------

foreign/memory/compat.ypsilon.sls
---------------------------------

irregex.sls
-----------

The  (irregex) library  is  derived  from IrRegex  by  Alex Shinn.   The
original package  is distributed  under a BSD  style license and  can be
downloaded  from:  <http://synthcode.com/>.   Only  small  changes  were
needed for integration into Nausicaa.


format.sls
----------

knuth-morris-pratt.sls
----------------------

lalr.sls
lalr/lr-driver.sls
lalr/glr-driver.sls
-------------------

A LALR(1) parser generator written in  Scheme.  The library is a port to
R6RS of Lalr-scm  by Dominique Boucher.  The original  code is available
at:  <http://code.google.com/p/lalr-scm/>.  Port  to  R6RS and  Nausicaa
integration by Marco Maggi.


lists.sls
---------

loops.sls
---------

matches.sls
-----------

The library is derived from "match.scm" by Alex Shinn, who placed it in
the Public Domain.


nausicaa.*.sls
--------------

Written by Marco Maggi.  COND-EXPAND implementation from the R6RS SRFI
port by Derick Eddington.


nausicaa/common.sls
-------------------

nausicaa/registry.sls
---------------------

object-properties.sls
---------------------

Written by Marco Maggi from the similar interface in Guile.


one-dimension-cc.sls
one-dimension-co.sls
--------------------

Written by Marco Maggi.


packrat.sls
-----------

Original code  by Tony Garnock-Jones and  LShift Ltd.  Port  to R6RS and
Nausicaa integration by  Marco Maggi.  Distributed under the  terms of a
BSD  like license.   The original  code works  with MzScheme  and  it is
distrubuted  at   <http://dev.lshift.net/tonyg/json-scheme/>  (URL  last
verified Sun Sep 6, 2009).


parameters.sls
parameters.*.sls
----------------

parser-tools/source-location.sls
parser-tools/lexical-token.sls
------------------------------

The  code is  derived from  Lalr-scm  by Dominique  Boucher and  Packrat
Parser by Tony Garnock-Jones and  LShift Ltd.  Port to R6RS and Nausicaa
integration by Marco Maggi.


pregexp.sls
-----------

This library is based upon "pregexp" by Dorai Sitaram.  It was modified
by Marco Maggi to work with R6RS Scheme implementations and to fit into
the Nausicaa distribution.  The original code is available at (URL last
verified Sun Jul 12, 2009): <http://evalwhen.com/pregexp/index.html>.


queues.sls
----------

random.sls
----------

random/lists.sls
----------------

random/strings.sls
------------------

random/vectors.sls
------------------

random/borosh.sls
-----------------

The  generator is taken  from: Donald  E. Knuth.   "The Art  of Computer
Programming".  Volume 2.  Third Edition.  Addison-Wesley.  Page 106-108.
It is  called "Borosh  - Niederreiter".  The  original code is  by Carlo
Perassi and Heiko  Bauke.  The Scheme code was  converted by Marco Maggi
from a C language version from the GNU Scientific Library release 1.12.


random/marsaglia.sls
--------------------

This  is  a Scheme  port  of  George  Marsaglia's pseudo-random  numbers
generators for  the C language.  The  original is in  the Public Domain.
The code was posted by George Marsaglia in a thread on sci.stat.math and
sci.crypt starting on January, 12 1999.


random/mersenne.sls
-------------------

Derived from an original  C language implementation by Michael Brundage.
Ported to Scheme by Marco Maggi.


random/cmrg.sls
-----------------

This is a conversion of the C language implementation of CMRG in the GNU
Scientific Library  (GSL), by James Theiler and  Brian Gough.  Converted
by Marco Maggi.


scmobj.sls
----------

This is a port to R6RS and LIMY Schemes of ScmObj by Dorai Sitaram.  The
original code is available at:

   <http://www.ccs.neu.edu/home/dorai/scmobj/scmobj.html>

(last checked  Thu Nov 13, 2008).   Marco Maggi overhauled  a little the
original code to make it work with R6RS libraries.


silex.sls
silex/*.l
------------------

``SILex'' stands  for ``Scheme Implementation of Lex''.   It generates a
Scheme  lexical  analyser  from  a Lex--like  specification  file.   The
library is a port to R6RS Scheme of SILex version 1.0 by Danny Dube'.

The original version of SILex is available at:

		  <http://www.iro.umontreal.ca/~dube>

(last checked Thu  Jul 16, 2009).  Marco Maggi did  the very simple port
to R6RS and Nausicaa integration (I changed almost nothing).

strings.sls
-----------

strings/low.sls
---------------

vectors.sls
-----------

vectors/low.sls
---------------


### end of file
# Local Variables:
# mode: text
# fill-column: 72
# paragraph-start: "*"
# End:
