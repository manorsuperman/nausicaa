
		      Credits for Nausicaa/Scheme
		      ===========================


This  file  is  for  credits  notes  about the  code  in  this  package.
Additional credits for the  documentation, are in the "Credits" appendix
of the documentation file in Texinfo format.

char-sets.sls
-------------

char-sets/blocks.sls
--------------------

char-sets/categories.sls
------------------------

checks.sls
----------

cleanup-handlers.sls
--------------------


combinators.sls
---------------

compare.sls
-----------

foreign.sls
-----------

foreign/cstring.sls
-------------------

foreign/errno.sls
-----------------

foreign/ffi.sls
---------------

foreign/ffi/compat.ikarus.sls
-----------------------------


foreign/ffi/compat.larceny.sls
------------------------------

foreign/ffi/compat.mosh.sls
---------------------------

foreign/ffi/compat.ypsilon.sls
------------------------------

foreign/ffi/sizeof.sls
----------------------

foreign/guarded-malloc.sls
--------------------------

foreign/memory.sls
------------------

foreign/memory/compat.ikarus.sls
--------------------------------

foreign/memory/compat.larceny.sls
---------------------------------

foreign/memory/compat.mosh.sls
------------------------------

foreign/memory/compat.ypsilon.sls
---------------------------------

irregex.sls
-----------

The  (irregex) library  is  derived  from IrRegex  by  Alex Shinn.   The
original package  is distributed  under a BSD  style license and  can be
downloaded  from:  <http://synthcode.com/>.   Only  small  changes  were
needed for integration into Nausicaa.


format.sls
----------

knuth-morris-pratt.sls
----------------------

lists.sls
---------

loops.sls
---------

nausicaa.ikarus.sls
-------------------

nausicaa.larceny.sls
--------------------


nausicaa.mosh.sls
-----------------

nausicaa.ypsilon.sls
--------------------

nausicaa/common.sls
-------------------

nausicaa/registry.sls
---------------------

object-properties.sls
---------------------


one-dimension-cc.sls
--------------------



one-dimension-co.sls
--------------------

parameters.ikarus.sls
---------------------

parameters.larceny.sls
----------------------


parameters.mosh.sls
-------------------

parameters.ypsilon.sls
----------------------

pregexp.sls
-----------

This library is based upon  "pregexp" by Dorai Sitaram.  It was modified
to work  with R6RS Scheme implementations  and to fit  into the Nausicaa
distribution.  The original code is  available at (URL last verified Sun
Jul 12, 2009): <http://evalwhen.com/pregexp/index.html>.


queues.sls
----------

random.sls
----------

random/lists.sls
----------------

random/strings.sls
------------------

random/vectors.sls
------------------

random/borosh.sls
-----------------

The  generator is taken  from: Donald  E. Knuth.   "The Art  of Computer
Programming".  Volume 2.  Third Edition.  Addison-Wesley.  Page 106-108.
It is  called "Borosh  - Niederreiter".  The  original code is  by Carlo
Perassi and Heiko  Bauke.  The Scheme code was  converted by Marco Maggi
from a C language version from the GNU Scientific Library release 1.12.

random/marsaglia.sls
--------------------

This  is  a Scheme  port  of  George  Marsaglia's pseudo-random  numbers
generators for  the C language.  The  original is in  the Public Domain.
The code was posted by George Marsaglia in a thread on sci.stat.math and
sci.crypt starting on January, 12 1999.

random/mersenne.sls
-------------------

Derived from an original  C language implementation by Michael Brundage.
Ported to Scheme by Marco Maggi.

random/cmrg.sls
-----------------

This is a conversion of the C language implementation of CMRG in the GNU
Scientific Library  (GSL), by James Theiler and  Brian Gough.  Converted
by Marco Maggi.


scmobj.sls
----------

This is a port to R6RS and LIMY Schemes of ScmObj by Dorai Sitaram.  The
original code is available at:

   <http://www.ccs.neu.edu/home/dorai/scmobj/scmobj.html>

(last checked  Thu Nov 13, 2008).   Marco Maggi overhauled  a little the
original code to make it work with R6RS libraries.

silex.sls
silex/multilex.sls
------------------

``SILex'' stands  for ``Scheme Implementation of Lex''.   It generates a
Scheme  lexical  analyser  from  a Lex--like  specification  file.   The
library is a port to R6RS Scheme of SILex version 1.0 by Danny Dube'.

The original version of SILex is available at:

		  <http://www.iro.umontreal.ca/~dube>

(last checked Thu  Jul 16, 2009).  Marco Maggi did  the very simple port
to R6RS and Nausicaa integration (I changed almost nothing).

strings.sls
-----------

strings/low.sls
---------------

vectors.sls
-----------

vectors/low.sls
---------------


### end of file
# Local Variables:
# mode: text
# fill-column: 72
# paragraph-start: "*"
# End:
