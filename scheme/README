
		      Nausicaa/Scheme
		      ===============


Topics
------

  1. Introduction
  2. License
  4. Install
  5. Testing
  A. Credits
  B. Bug reports
  C. Resources


1. Introduction
---------------

This is a set of Scheme libraries defining an augmented R6RS
Scheme  language.  It  attempts to  make  self-defining R6RS
Scheme implementations more R6RS  compliant, in the sense of
"programs that work".

  Additionally: some functions  from the SRFI collection are
exported  by  default,  and  a  common API  to  the  foreign
function interfaces is defined.


2. License
----------

Each file has its own  copyright notice at the top, refer to
it.  See also the CREDITS file.

Copyright (c) 2008-2009 Marco Maggi <marcomaggi@gna.org>

This  program  is free  software:  you  can redistribute  it
and/or modify it  under the terms of the  GNU General Public
License as published by the Free Software Foundation, either
version  3 of  the License,  or (at  your option)  any later
version.

This  program is  distributed in  the hope  that it  will be
useful, but  WITHOUT ANY WARRANTY; without  even the implied
warranty  of  MERCHANTABILITY or  FITNESS  FOR A  PARTICULAR
PURPOSE.   See  the  GNU  General Public  License  for  more
details.

You should  have received a  copy of the GNU  General Public
License   along   with    this   program.    If   not,   see
<http://www.gnu.org/licenses/>.


4. Install
----------

Basically we should do:

   $ cd scheme
   $ mkdir "=build"
   $ cd "=build"
   $ ../configure
   $ make
   $ make install

  To test what a rule will do use the "-n" option; example:

    $ make install -n

  The "Makefile" supports the "DESTDIR" environment variable
to install the files under a temporary location; example:

    $ make install DESTDIR=/tmp/marco/nausicaa

  The   "Makefile"  supports  the   packages  infrastructure
described  in the  Nausicaa documentation.   Refer to  it to
build binary distribution archives.

5. Testing
----------

Running:

   $ make test

will  evaluate   the  test  suite  for   all  the  installed
libraries.   Test   file  names  match   the  shell  pattern
"test-*.sps", where  the star matches a "stem";  to select a
specific  test  file we  can  set  the environment  variable
"name" to a substring in the stem; examples:

   # select test-char-set.sps
   $ make test file=char-set

   # select test-lists.sps
   $ make test file=lists

   # select test-cond-expand.sps
   $ make test file=cond

  Each test has a name; to select a specific test or section
of tests,  we can set  the environment variable "name"  to a
substring of the name; example:

   $ make test file=char-set name=create

  A  set   of  tests  to  assess   compatibility  of  Scheme
implementations with the R6RS  standard is included.  To run
them:

    $ make test-ikarus-compat
    $ make test-larceny-compat
    $ make test-mosh-compat
    $ make test-ypsilon-compat

to run them all:

    $ make test-compat

beware that the execution of these tests may take minutes.


A. Credits
----------

The stuff was assembled and written by Marco Maggi.

  The  original  SRFI code  is  the  work  of many  authors,
reference of which you can find the at the top of the source
code files.

  The SRFI implementations are a checkout of the development
version  at Launchpad  (see Resources)  by  Derick Eddington
(https://launchpad.net/~derick-eddington).

  Upon inclusion  into Nausicaa further  modifications where
done to the SRFI code.

  The  "tests/r6rs"  subdirectory  holds R6RS  compatibility
tests gathered  from the PLT  Scheme repository (Thu  Jan 1,
2009).  It  is supposed  that the author  of those  tests is
Matthew Flatt.


B. Bug reports
--------------

Bug reports  are appreciated, register them  using the issue
tracker at Nausicaa's GitHub site.


C. Resources
------------

The original SRFI documents are available at:

		 <http://srfi.schemers.org>

  The  development version  of SRFI  for R6RS/Ikarus  can be
found at:

<https://code.launchpad.net/~ikarus-libraries-team/ikarus-libraries/srfi>
       <http://code.launchpad.net/ikarus-libraries/>


### end of file
# Local Variables:
# mode: text
# fill-column: 60
# paragraph-start: "*"
# End:
