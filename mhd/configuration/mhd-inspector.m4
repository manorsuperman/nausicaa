dnl (foreign net mhd sizeof) --
dnl
dnl Part of: Nausicaa
dnl Contents: foreign library inspection generation
dnl Date: Tue Mar 30, 2010
dnl
dnl Abstract
dnl
dnl
dnl
dnl Copyright (c) 2010 Marco Maggi <marco.maggi-ipsu@poste.it>
dnl
dnl This program is free software:  you can redistribute it and/or modify
dnl it under the terms of the  GNU General Public License as published by
dnl the Free Software Foundation, either version 3 of the License, or (at
dnl your option) any later version.
dnl
dnl This program is  distributed in the hope that it  will be useful, but
dnl WITHOUT  ANY   WARRANTY;  without   even  the  implied   warranty  of
dnl MERCHANTABILITY  or FITNESS FOR  A PARTICULAR  PURPOSE.  See  the GNU
dnl General Public License for more details.
dnl
dnl You should  have received  a copy of  the GNU General  Public License
dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.
dnl

AC_DEFUN([NAUSICAA_MHD],[


dnl Preprocessor symbols: version numbers
NAUSICAA_DEFINE_VALUE([MHD_VERSION])

dnl Preprocessor symbols: return codes
NAUSICAA_DEFINE_VALUE([MHD_YES])
NAUSICAA_DEFINE_VALUE([MHD_NO])

dnl Preprocessor symbols: unknown size constant
NAUSICAA_DEFINE_VALUE([MHD_SIZE_UNKNOWN])

dnl Preprocessor symbols: HTTP response codes
NAUSICAA_DEFINE_VALUE([MHD_HTTP_CONTINUE])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_SWITCHING_PROTOCOLS])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_PROCESSING])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_OK])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_CREATED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_ACCEPTED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_NON_AUTHORITATIVE_INFORMATION])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_NO_CONTENT])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_RESET_CONTENT])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_PARTIAL_CONTENT])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_MULTI_STATUS])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_MULTIPLE_CHOICES])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_MOVED_PERMANENTLY])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_FOUND])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_SEE_OTHER])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_NOT_MODIFIED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_USE_PROXY])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_SWITCH_PROXY])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_TEMPORARY_REDIRECT])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_BAD_REQUEST])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_UNAUTHORIZED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_PAYMENT_REQUIRED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_FORBIDDEN])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_NOT_FOUND])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_METHOD_NOT_ALLOWED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_METHOD_NOT_ACCEPTABLE])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_PROXY_AUTHENTICATION_REQUIRED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_REQUEST_TIMEOUT])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_CONFLICT])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_GONE])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_LENGTH_REQUIRED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_PRECONDITION_FAILED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_REQUEST_ENTITY_TOO_LARGE])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_REQUEST_URI_TOO_LONG])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_UNSUPPORTED_MEDIA_TYPE])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_REQUESTED_RANGE_NOT_SATISFIABLE])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_EXPECTATION_FAILED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_UNPROCESSABLE_ENTITY])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_LOCKED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_FAILED_DEPENDENCY])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_UNORDERED_COLLECTION])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_UPGRADE_REQUIRED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_RETRY_WITH])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_INTERNAL_SERVER_ERROR])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_NOT_IMPLEMENTED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_BAD_GATEWAY])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_SERVICE_UNAVAILABLE])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_GATEWAY_TIMEOUT])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_HTTP_VERSION_NOT_SUPPORTED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_VARIANT_ALSO_NEGOTIATES])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_INSUFFICIENT_STORAGE])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_BANDWIDTH_LIMIT_EXCEEDED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_NOT_EXTENDED])

dnl String preprocessor symbols: header strings
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_ACCEPT],[MHD_HTTP_HEADER_ACCEPT])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_ACCEPT_CHARSET],[MHD_HTTP_HEADER_ACCEPT_CHARSET])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_ACCEPT_ENCODING],[MHD_HTTP_HEADER_ACCEPT_ENCODING])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_ACCEPT_LANGUAGE],[MHD_HTTP_HEADER_ACCEPT_LANGUAGE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_ACCEPT_RANGES],[MHD_HTTP_HEADER_ACCEPT_RANGES])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_AGE],[MHD_HTTP_HEADER_AGE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_ALLOW],[MHD_HTTP_HEADER_ALLOW])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_AUTHORIZATION],[MHD_HTTP_HEADER_AUTHORIZATION])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CACHE_CONTROL],[MHD_HTTP_HEADER_CACHE_CONTROL])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CONNECTION],[MHD_HTTP_HEADER_CONNECTION])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CONTENT_ENCODING],[MHD_HTTP_HEADER_CONTENT_ENCODING])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CONTENT_LANGUAGE],[MHD_HTTP_HEADER_CONTENT_LANGUAGE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CONTENT_LENGTH],[MHD_HTTP_HEADER_CONTENT_LENGTH])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CONTENT_LOCATION],[MHD_HTTP_HEADER_CONTENT_LOCATION])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CONTENT_MD5],[MHD_HTTP_HEADER_CONTENT_MD5])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CONTENT_RANGE],[MHD_HTTP_HEADER_CONTENT_RANGE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_CONTENT_TYPE],[MHD_HTTP_HEADER_CONTENT_TYPE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_COOKIE],[MHD_HTTP_HEADER_COOKIE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_DATE],[MHD_HTTP_HEADER_DATE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_ETAG],[MHD_HTTP_HEADER_ETAG])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_EXPECT],[MHD_HTTP_HEADER_EXPECT])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_EXPIRES],[MHD_HTTP_HEADER_EXPIRES])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_FROM],[MHD_HTTP_HEADER_FROM])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_HOST],[MHD_HTTP_HEADER_HOST])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_IF_MATCH],[MHD_HTTP_HEADER_IF_MATCH])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_IF_MODIFIED_SINCE],[MHD_HTTP_HEADER_IF_MODIFIED_SINCE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_IF_NONE_MATCH],[MHD_HTTP_HEADER_IF_NONE_MATCH])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_IF_RANGE],[MHD_HTTP_HEADER_IF_RANGE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_IF_UNMODIFIED_SINCE],[MHD_HTTP_HEADER_IF_UNMODIFIED_SINCE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_LAST_MODIFIED],[MHD_HTTP_HEADER_LAST_MODIFIED])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_LOCATION],[MHD_HTTP_HEADER_LOCATION])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_MAX_FORWARDS],[MHD_HTTP_HEADER_MAX_FORWARDS])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_PRAGMA],[MHD_HTTP_HEADER_PRAGMA])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_PROXY_AUTHENTICATE],[MHD_HTTP_HEADER_PROXY_AUTHENTICATE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_PROXY_AUTHORIZATION],[MHD_HTTP_HEADER_PROXY_AUTHORIZATION])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_RANGE],[MHD_HTTP_HEADER_RANGE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_REFERER],[MHD_HTTP_HEADER_REFERER])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_RETRY_AFTER],[MHD_HTTP_HEADER_RETRY_AFTER])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_SERVER],[MHD_HTTP_HEADER_SERVER])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_SET_COOKIE],[MHD_HTTP_HEADER_SET_COOKIE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_SET_COOKIE2],[MHD_HTTP_HEADER_SET_COOKIE2])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_TE],[MHD_HTTP_HEADER_TE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_TRAILER],[MHD_HTTP_HEADER_TRAILER])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_TRANSFER_ENCODING],[MHD_HTTP_HEADER_TRANSFER_ENCODING])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_UPGRADE],[MHD_HTTP_HEADER_UPGRADE])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_USER_AGENT],[MHD_HTTP_HEADER_USER_AGENT])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_VARY],[MHD_HTTP_HEADER_VARY])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_VIA],[MHD_HTTP_HEADER_VIA])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_WARNING],[MHD_HTTP_HEADER_WARNING])
NAUSICAA_STRING_TEST([MHD_HTTP_HEADER_WWW_AUTHENTICATE],[MHD_HTTP_HEADER_WWW_AUTHENTICATE])

dnl String preprocessor symbols: HTTP versions
NAUSICAA_STRING_TEST([MHD_HTTP_VERSION_1_0],[MHD_HTTP_VERSION_1_0])
NAUSICAA_STRING_TEST([MHD_HTTP_VERSION_1_1],[MHD_HTTP_VERSION_1_1])

dnl String preprocessor symbols: HTTP methods
NAUSICAA_STRING_TEST([MHD_HTTP_METHOD_CONNECT],[MHD_HTTP_METHOD_CONNECT])
NAUSICAA_STRING_TEST([MHD_HTTP_METHOD_DELETE],[MHD_HTTP_METHOD_DELETE])
NAUSICAA_STRING_TEST([MHD_HTTP_METHOD_GET],[MHD_HTTP_METHOD_GET])
NAUSICAA_STRING_TEST([MHD_HTTP_METHOD_HEAD],[MHD_HTTP_METHOD_HEAD])
NAUSICAA_STRING_TEST([MHD_HTTP_METHOD_OPTIONS],[MHD_HTTP_METHOD_OPTIONS])
NAUSICAA_STRING_TEST([MHD_HTTP_METHOD_POST],[MHD_HTTP_METHOD_POST])
NAUSICAA_STRING_TEST([MHD_HTTP_METHOD_PUT],[MHD_HTTP_METHOD_PUT])
NAUSICAA_STRING_TEST([MHD_HTTP_METHOD_TRACE],[MHD_HTTP_METHOD_TRACE])

dnl Preprocessor symbols: HTTP POST encodings
NAUSICAA_DEFINE_VALUE([MHD_HTTP_POST_ENCODING_FORM_URLENCODED])
NAUSICAA_DEFINE_VALUE([MHD_HTTP_POST_ENCODING_MULTIPART_FORMDATA])
NAUSICAA_INSPECT_TYPE([MHD_FLAG],[enum MHD_FLAG],[signed-int],[#f])

dnl enum MHD_FLAG
NAUSICAA_ENUM_VALUE([MHD_NO_FLAG])
NAUSICAA_ENUM_VALUE([MHD_USE_DEBUG])
NAUSICAA_ENUM_VALUE([MHD_USE_SSL])
NAUSICAA_ENUM_VALUE([MHD_USE_THREAD_PER_CONNECTION])
NAUSICAA_ENUM_VALUE([MHD_USE_SELECT_INTERNALLY])
NAUSICAA_ENUM_VALUE([MHD_USE_IPv6])
NAUSICAA_ENUM_VALUE([MHD_USE_PEDANTIC_CHECKS])
NAUSICAA_INSPECT_TYPE([MHD_OPTION],[enum MHD_OPTION],[signed-int],[#f])

dnl enum MHD_OPTION
NAUSICAA_ENUM_VALUE([MHD_OPTION_END])
NAUSICAA_ENUM_VALUE([MHD_OPTION_ARRAY])
NAUSICAA_ENUM_VALUE([MHD_OPTION_CONNECTION_MEMORY_LIMIT])
NAUSICAA_ENUM_VALUE([MHD_OPTION_CONNECTION_LIMIT])
NAUSICAA_ENUM_VALUE([MHD_OPTION_CONNECTION_TIMEOUT])
NAUSICAA_ENUM_VALUE([MHD_OPTION_NOTIFY_COMPLETED])
NAUSICAA_ENUM_VALUE([MHD_OPTION_PER_IP_CONNECTION_LIMIT])
NAUSICAA_ENUM_VALUE([MHD_OPTION_SOCK_ADDR])
NAUSICAA_ENUM_VALUE([MHD_OPTION_URI_LOG_CALLBACK])
NAUSICAA_ENUM_VALUE([MHD_OPTION_HTTPS_MEM_KEY])
NAUSICAA_ENUM_VALUE([MHD_OPTION_HTTPS_MEM_CERT])
NAUSICAA_ENUM_VALUE([MHD_OPTION_CRED_TYPE])
NAUSICAA_ENUM_VALUE([MHD_OPTION_PROTOCOL_VERSION])
NAUSICAA_ENUM_VALUE([MHD_OPTION_CIPHER_ALGORITHM])
NAUSICAA_ENUM_VALUE([MHD_OPTION_EXTERNAL_LOGGER])
NAUSICAA_ENUM_VALUE([MHD_OPTION_THREAD_POOL_SIZE])
NAUSICAA_INSPECT_TYPE([MHD_VALUEKIND],[enum MHD_ValueKind],[signed-int],[#f])

dnl enum MHD_ValueKind
NAUSICAA_ENUM_VALUE([MHD_RESPONSE_HEADER_KIND])
NAUSICAA_ENUM_VALUE([MHD_HEADER_KIND])
NAUSICAA_ENUM_VALUE([MHD_COOKIE_KIND])
NAUSICAA_ENUM_VALUE([MHD_POSTDATA_KIND])
NAUSICAA_ENUM_VALUE([MHD_GET_ARGUMENT_KIND])
NAUSICAA_ENUM_VALUE([MHD_FOOTER_KIND])
NAUSICAA_INSPECT_TYPE([MHD_REQUESTTERMINATIONCODE],[enum MHD_RequestTerminationCode],[signed-int],[#f])

dnl enum MHD_RequestTerminationCode
NAUSICAA_ENUM_VALUE([MHD_REQUEST_TERMINATED_COMPLETED_OK])
NAUSICAA_ENUM_VALUE([MHD_REQUEST_TERMINATED_WITH_ERROR])
NAUSICAA_ENUM_VALUE([MHD_REQUEST_TERMINATED_TIMEOUT_REACHED])
NAUSICAA_ENUM_VALUE([MHD_REQUEST_TERMINATED_DAEMON_SHUTDOWN])
NAUSICAA_INSPECT_TYPE([MHD_GNUTLS_CIPHERALGORITHM],[enum MHD_GNUTLS_CipherAlgorithm],[signed-int],[#f])

dnl enum MHD_GNUTLS_CipherAlgorithm
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_CIPHER_UNKNOWN])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_CIPHER_NULL])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_CIPHER_ARCFOUR_128])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_CIPHER_3DES_CBC])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_CIPHER_AES_128_CBC])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_CIPHER_AES_256_CBC])
NAUSICAA_INSPECT_TYPE([MHD_GNUTLS_PROTOCOL],[enum MHD_GNUTLS_Protocol],[signed-int],[#f])

dnl enum MHD_GNUTLS_Protocol
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_PROTOCOL_END])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_PROTOCOL_SSL3])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_PROTOCOL_TLS1_0])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_PROTOCOL_TLS1_1])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_PROTOCOL_TLS1_2])
NAUSICAA_ENUM_VALUE([MHD_GNUTLS_PROTOCOL_VERSION_UNKNOWN])
NAUSICAA_INSPECT_TYPE([MHD_CONNECTIONINFOTYPE],[enum MHD_ConnectionInfoType],[signed-int],[#f])

dnl enum MHD_ConnectionInfoType
NAUSICAA_ENUM_VALUE([MHD_CONNECTION_INFO_CIPHER_ALGO])
NAUSICAA_ENUM_VALUE([MHD_CONNECTION_INFO_PROTOCOL])
NAUSICAA_ENUM_VALUE([MHD_CONNECTION_INFO_CLIENT_ADDRESS])
NAUSICAA_INSPECT_TYPE([MHD_DAEMONINFOTYPE],[enum MHD_DaemonInfoType],[signed-int],[#f])

dnl enum MHD_DaemonInfoType
NAUSICAA_ENUM_VALUE([MHD_DAEMON_INFO_KEY_SIZE])
NAUSICAA_ENUM_VALUE([MHD_DAEMON_INFO_MAC_KEY_SIZE])
NAUSICAA_ENUM_VALUE([MHD_DAEMON_INFO_LISTEN_FD])
NAUSICAA_INSPECT_TYPE([SOCKLEN_T],[socklen_t],[unsigned-int],[#f])

dnl Struct inspection: MHD_ConnectionInfo
NAUSICAA_INSPECT_STRUCT_TYPE([MHD_CONNECTIONINFO],[union MHD_ConnectionInfo],[#f])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_CONNECTIONINFO_CIPHER_ALGORITHM],[union MHD_ConnectionInfo],[cipher_algorithm],[signed-int])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_CONNECTIONINFO_PROTOCOL],[union MHD_ConnectionInfo],[protocol],[signed-int])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_CONNECTIONINFO_CLIENT_ADDR],[union MHD_ConnectionInfo],[client_addr],[pointer])

dnl Struct inspection: MHD_DaemonInfo
NAUSICAA_INSPECT_STRUCT_TYPE([MHD_DAEMONINFO],[union MHD_DaemonInfo],[#f])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_DAEMONINFO_KEY_SIZE],[union MHD_DaemonInfo],[key_size],[unsigned-int])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_DAEMONINFO_MAC_KEY_SIZE],[union MHD_DaemonInfo],[mac_key_size],[unsigned-int])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_DAEMONINFO_LISTEN_FD],[union MHD_DaemonInfo],[listen_fd],[signed-int])

dnl Struct inspection: MHD_OptionItem
NAUSICAA_INSPECT_STRUCT_TYPE([MHD_OPTIONITEM],[struct MHD_OptionItem],[#f])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_OPTIONITEM_OPTION],[struct MHD_OptionItem],[option],[signed-int])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_OPTIONITEM_VALUE],[struct MHD_OptionItem],[value],[signed-int])
NAUSICAA_INSPECT_FIELD_TYPE([MHD_OPTIONITEM_PTR_VALUE],[struct MHD_OptionItem],[ptr_value],[pointer])
NAU_DS_WITH_OPTION([MHD_SHARED_OBJECT],[mhd-shared-object],[libmicrohttpd.so],
  [Mhd shared library file],[select Mhd shared library file])


])


dnl end of file
