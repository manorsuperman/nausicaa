\input texinfo.tex
@c %**start of header
@setfilename nausicaa-blas.info
@settitle BLAS for Nausicaa
@c %**end of header

@c page
@c ------------------------------------------------------------
@c Macros.
@c ------------------------------------------------------------

@include version.texiinc

@c ------------------------------------------------------------
@c License macros.
@c ------------------------------------------------------------

@macro gnu{}
@acronym{GNU}
@end macro

@macro gpl{}
@acronym{GPL}
@end macro

@macro fdl{}
@acronym{FDL}
@end macro

@c ------------------------------------------------------------
@c Special notes.
@c ------------------------------------------------------------

@macro forunix{}
@strong{Unix:}
@end macro

@macro fixme{TEXT}
@strong{FIXME: \TEXT\}
@end macro

@c ------------------------------------------------------------
@c Scheme related macros.
@c ------------------------------------------------------------

@macro rnrs{VERSION}
@acronym{R\VERSION\RS}
@end macro

@macro rsix{}
Revised^6 Report on the algorithmic language Scheme
@end macro

@macro repl{}
@acronym{REPL}
@end macro

@macro srfi{}
@acronym{SRFI}
@end macro

@c Separating the @srfi{} macro from the number with a '--' rather than
@c a '-'  makes the expansion look  ugly in menu entries  under the Info
@c reader.  IMHO  this should not happen,  but it does; so  we live with
@c this, because the main purpose of this document is to provide an Info
@c version.
@macro ansrfi{NUM}
@srfi{}-\NUM\
@end macro

@macro clos{}
@acronym{CLOS}
@end macro

@macro library{SPEC}
@code{(\SPEC\)}
@end macro

@macro ffi{}
@acronym{FFI}
@end macro

@macro class{NAME}
@code{<\NAME\>}
@end macro

@macro condition{NAME}
@code{&\NAME\}
@end macro

@c ------------------------------------------------------------
@c Miscellaneous acronyms.
@c ------------------------------------------------------------

@macro ansi{}
@acronym{ANSI}
@end macro

@macro api{}
@acronym{API}
@end macro

@c Remember that @url is already used by Texinfo.
@macro aurl{}
@acronym{URL}
@end macro

@macro ascii{}
@acronym{ASCII}
@end macro

@macro cpu{}
@acronym{CPU}
@end macro

@macro csv{}
@acronym{CSV}
@end macro

@macro ieee{}
@acronym{IEEE}
@end macro

@macro iso{}
@acronym{ISO}
@end macro

@macro posix{}
@acronym{POSIX}
@end macro

@macro rfc{}
@acronym{RFC}
@end macro

@macro sql{}
@acronym{SQL}
@end macro

@macro utf{}
@acronym{UTF}
@end macro

@macro utc{}
@acronym{UTC}
@end macro

@macro tai{}
@acronym{TAI}
@end macro

@macro axml{}
@acronym{XML}
@end macro

@c ------------------------------------------------------------
@c Software acronyms.
@c ------------------------------------------------------------

@macro gmp{}
@acronym{GMP}
@end macro

@macro gcc{}
@acronym{GCC}
@end macro

@macro blas{}
@acronym{BLAS}
@end macro

@macro cblas{}
@acronym{CBLAS}
@end macro

@c ------------------------------------------------------------
@c Network related acronyms.
@c ------------------------------------------------------------

@macro http{}
@acronym{HTTP}
@end macro

@macro ftp{}
@acronym{FTP}
@end macro

@macro ip{}
@acronym{IP}
@end macro

@macro ssh{}
@acronym{SSH}
@end macro

@macro ssl{}
@acronym{SSL}
@end macro

@macro tcp{}
@acronym{TCP}
@end macro

@macro tls{}
@acronym{TLS}
@end macro

@macro udp{}
@acronym{UDP}
@end macro

@macro smtp{}
@acronym{SMTP}
@end macro

@c ------------------------------------------------------------
@c Scheme language macros.
@c ------------------------------------------------------------

@macro func{NAME}
@code{\NAME\}
@end macro

@macro snull{}
@code{()}
@end macro

@macro true{}
@code{#t}
@end macro

@macro false{}
@code{#f}
@end macro

@macro keyword{NAME}
@code{#:\NAME\}
@end macro

@c ------------------------------------------------------------
@c C language macros.
@c ------------------------------------------------------------

@macro cfunc{NAME}
@code{\NAME\()}
@end macro

@macro cnull{}
@code{NULL}
@end macro

@c ------------------------------------------------------------
@c Macros for references to external documents.
@c ------------------------------------------------------------

@macro glibcref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,libc}
@end macro

@c @macro rsixref{NODE, TITLE}
@c @ref{\NODE\,\TITLE\,\TITLE\,r6rs}
@c @end macro

@macro bibref{TAG}
@code{[\TAG\]}
@end macro

@macro autoconfref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,autoconf}
@end macro

@macro nauref{NODE, TITLE}
@ref{\NODE\,\TITLE\,\TITLE\,nausicaa}
@end macro

@c ------------------------------------------------------------
@c RNRS document macros.
@c ------------------------------------------------------------

@macro rsixlibrary{THING}
@code{(rnrs \THING\ (6))}
@end macro

@macro arbno{THING}
\THING\*
@end macro

@macro atleastone{THING}
\THING\+
@end macro

@c ------------------------------------------------------------
@c To be used in normal text.

@macro meta{THING}
<\THING\>
@end macro

@macro metai{THING}
<\THING\1>
@end macro

@macro metaii{THING}
<\THING\2>
@end macro

@macro metaiii{THING}
<\THING\3>
@end macro

@c ------------------------------------------------------------
@c To be used inside @example environment and @samp directives.

@macro cmeta{THING}
<\THING\>
@end macro

@macro cmetai{THING}
<\THING\1>
@end macro

@macro cmetaii{THING}
<\THING\2>
@end macro

@macro cmetaiii{THING}
<\THING\3>
@end macro

@c ------------------------------------------------------------
@c To be used inside argument lists.

@macro ameta{THING}
<\THING\>
@end macro

@macro ametai{THING}
<\THING\1>
@end macro

@macro ametaii{THING}
<\THING\2>
@end macro

@macro ametaiii{THING}
<\THING\3>
@end macro

@c ------------------------------------------------------------

@macro hyper{THING}
<\THING\>
@end macro

@macro hyperi{THING}
<\THING\1>
@end macro

@macro hyperii{THING}
<\THING\2>
@end macro

@macro hyperiii{THING}
<\THING\3>
@end macro

@macro hypern{THING}
<\THING\n>
@end macro

@c ------------------------------------------------------------

@macro varo{THING}
@var{\THING\0}
@end macro

@macro vari{THING}
@var{\THING\1}
@end macro

@macro varii{THING}
@var{\THING\2}
@end macro

@macro variii{THING}
@var{\THING\3}
@end macro

@macro variv{THING}
@var{\THING\4}
@end macro

@macro varn{THING}
@var{\THING\n}
@end macro

@macro vark{THING}
@var{\THING\k}
@end macro

@macro varj{THING}
@var{\THING\j}
@end macro


@c page
@c ------------------------------------------------------------
@c Values.
@c ------------------------------------------------------------

@set TITLE                      BLAS for Nausicaa

@c To be used as @value{PACKAGE} whenever we need to include the full
@c name of this package.
@set PACKAGE                    Nausicaa/@blas{}

@c To be used as @value{PACKAGE_NICKNAME} whenever we need to include
@c the nickname of the project: the name that is used to compose the
@c distribution tarball or the web address.
@set PACKAGE_NICKNAME           nausicaa-blas

@c To be used as @value{AUTHOR} whenever we need to include the list of
@c authors of this document.
@set AUTHOR                     Marco Maggi

@c To be used as @value{AUTHOR_EMAIL} whenever we need to include the
@c email of the *single* author of this document.
@set AUTHOR_EMAIL               @email{marco.maggi-ipsu@@poste.it}

@c To be used as @value{COPYRIGHT_YEARS} whenever we need to include the
@c list of copyright years.
@set COPYRIGHT_YEARS            2010

@c page
@c ------------------------------------------------------------
@c Copyright notice.
@c ------------------------------------------------------------

@copying
@noindent
This document describes version @version{} of @value{PACKAGE}, a
distribution of libraries for @rnrs{6} Scheme implementations; it
provides a binding to the @blas{}/@cblas{} C language library.  It is
built upon Nausicaa/Scheme, making use of its foreign--functions
interface.

The libraries support Ikarus, Mosh and Ypsilon Scheme; the package
supports @gnu{}+Linux systems.

The package is distributed under the terms of the @gnu{} General Public
License (@gpl{}) and can be downloaded from:

@center @url{http://github.com/marcomaggi/nausicaa/downloads}

@noindent
the project home page of Nausicaa is at:

@center @url{http://marcomaggi.github.com/nausicaa.html}

@noindent
development of Nausicaa takes place at:

@center @url{http://github.com/marcomaggi/nausicaa/tree/master}

@noindent
@blas{} is available at:

@center @url{http://www.netlib.org/blas/}

@noindent
Copyright @copyright{} @value{COPYRIGHT_YEARS} by @value{AUTHOR} @value{AUTHOR_EMAIL}

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the @gnu{} Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with
Invariant Sections being ``@gnu{} Free Documentation License'' and
``@gnu{} General Public License'', no Front--Cover Texts, and no
Back--Cover Texts.  A copy of the license is included in the section
entitled ``@gnu{} Free Documentation License''.
@end quotation
@end copying

@c page
@c ------------------------------------------------------------
@c Headers.
@c ------------------------------------------------------------

@titlepage
@title @value{TITLE}
@subtitle Revision @version{}
@author @value{AUTHOR} @value{AUTHOR_EMAIL}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c ------------------------------------------------------------

@ifinfo
@dircategory Development
@direntry
* nausicaa-blas: (nausicaa-blas).       @blas{} for Nausicaa.
@end direntry
@end ifinfo

@c ------------------------------------------------------------

@ignore
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex fn cp
@end ignore

@c page
@ifnottex
@node Top
@top @value{TITLE}

@insertcopying

@menu
* overview::                    Overview of the package.
* constants::                   Constant values.
* examples::                    Examples.

Appendices

* Package License::             GNU General Public License.
* Documentation License::       GNU Free Documentation License.
* references::                  Bibliography and references.

Indexes

* concept index::               An entry for each concept.
* function index::              An entry for each function.
* variable index::              An entry for each variable.
* type index::                  An entry for each type.
@end menu
@end ifnottex

@c page
@node overview
@chapter Overview of the package


This document describes version @version{} of @value{PACKAGE}, a
distribution of libraries for @rnrs{6} Scheme implementations; it
provides a binding to the @blas{}/@cblas{} C language library.  It is
built upon Nausicaa/Scheme, making use of its foreign--functions
interface.

The libraries support Ikarus, Mosh and Ypsilon Scheme; the package
supports @gnu{}+Linux systems.

The installed libraries are:

@table @library
@item foreign math blas shared-object
Exports the single binding @code{cblas-shared-object} which references
the foreign shared library.

@item foreign math blas sizeof
Exports bindings to constant values.

@item foreign math blas platform
Exports one binding for each foreign function; the bindings to the
Scheme function callouts have the same name of the C functions, so
@cfunc{cblas_sdsdot} is available as @func{cblas_sdsdot}.  This library
makes the original @blas{} documentation relevant for this package.

@item foreign math blas primitives
Exports one binding for each foreign function, reexporting bindings from
the platform library.  The bindings to the Scheme functions have the
same name of the C functions, but the prefix @code{cblas_} stripped; so
@cfunc{cblas_sdsdot} is available as @func{sdsdot}.

@item foreign math blas
Compound library exporting the high--level @api{}; it reexports bindings
from the @samp{primitives} library and the constant values from the
@samp{sizeof} library.

The bindings to constant values are stripped of the prefix @code{Cblas},
converted to lower case and with camel case replaced by dash separators.
@ref{constants, Constant values}.
@end table

@c page
@node constants
@chapter Constant values


The bindings with prefix @code{Cblas} are exported by the
@library{foreign math blas sizeof} library; the bindings without such
prefix are exported by the @library{foreign math blas} library.


@defvr Constant CblasRowMajor
@defvrx Constant row-major
Indicates that elements of each row of a matrix are contiguous in
memory.
@end defvr


@defvr Constant CblasColMajor
@defvrx Constant col-major
Indicates that elements of each column of a matrix are contiguous in
memory.
@end defvr


@defvr Constant CblasNoTrans
@defvrx Constant no-trans
No transpose.
@end defvr


@defvr Constant CblasTrans
@defvrx Constant trans
Transpose.
@end defvr


@defvr Constant CblasConjTrans
@defvrx Constant conj-trans
Conjugate transpose.
@end defvr


@defvr Constant CblasUpper
@defvrx Constant upper
Upper triangular.
@end defvr


@defvr Constant CblasLower
@defvrx Constant lower
Lower triangular.
@end defvr


@defvr Constant CblasNonUnit
@defvrx Constant non-unit
Non--unit triangular.
@end defvr


@defvr Constant CblasUnit
@defvrx Constant unit
Unit triangular.
@end defvr


@defvr Constant CblasLeft
@defvrx Constant left
Left.
@end defvr


@defvr Constant CblasRight
@defvrx Constant right
Right.
@end defvr

@c page
@node examples
@chapter Examples


The following is the example from the file @file{cblas_example1.c} in
the @cblas{} distribution by Netlib.

@example
(import (nausicaa)
  (compensations)
  (only (foreign ffi sizeof) sizeof-double)
  (only (foreign ffi)
	array-set-c-double!
	array-ref-c-double)
  (only (foreign memory) malloc/c)
  (prefix (foreign math blas) blas:))


(with-compensations
  (let* ((order   blas:col-major)
         (transa  blas:no-trans)
         (m       4) ;Size of Column (the number of rows)
         (n       4) ;Size of Row (the number of columns)
         (lda     4) ;Leading dimension of 5 * 4 matrix is 5
         (incx    1)
         (incy    1)
         (alpha   1.)
         (beta    0.)
         (a       (malloc/c (* sizeof-double m n)))
         (x       (malloc/c (* sizeof-double n)))
         (y       (malloc/c (* sizeof-double n))))

    ;; the elements of the first column
    (array-set-c-double! a 0 1.)
    (array-set-c-double! a 1 2.)
    (array-set-c-double! a 2 3.)
    (array-set-c-double! a 3 4.)

    ;; the elements of the second column
    (array-set-c-double! a m  1.)
    (array-set-c-double! a (+ m 1) 1.)
    (array-set-c-double! a (+ m 2) 1.)
    (array-set-c-double! a (+ m 3) 1.)

    ;; the elements of the third column
    (array-set-c-double! a (* m 2)  3.)
    (array-set-c-double! a (+ 1 (* m 2)) 4.)
    (array-set-c-double! a (+ 2 (* m 2)) 5.)
    (array-set-c-double! a (+ 3 (* m 2)) 6.)

    ;; the elements of the fourth column
    (array-set-c-double! a (* m 3)  5.)
    (array-set-c-double! a (+ 1 (* m 3)) 6.)
    (array-set-c-double! a (+ 2 (* m 3)) 7.)
    (array-set-c-double! a (+ 3 (* m 3)) 8.)

    ;; the elements of x and y
    (array-set-c-double! x 0 1.)
    (array-set-c-double! x 1 2.)
    (array-set-c-double! x 2 1.)
    (array-set-c-double! x 3 1.)
    (array-set-c-double! y 0 0.)
    (array-set-c-double! y 1 0.)
    (array-set-c-double! y 2 0.)
    (array-set-c-double! y 3 0.)

    (blas:dgemv order transa m n alpha a lda x incx beta y incy)

    (map (lambda (i)
           (array-ref-c-double y i))
      '(0 1 2 3))))
@result{} (11. 14. 17. 20.)
@end example

@c page

@include gpl-3.0.texiinc
@include fdl-1.3.texiinc

@c page
@node references
@appendix Bibliography and references



@c page
@node concept index
@appendix An entry for each concept

@printindex cp

@node function index
@appendix An entry for each function.

@printindex fn

@node variable index
@appendix An entry for each variable.

@printindex vr

@node type index
@appendix An entry for each type.

@printindex tp

@contents
@bye

@c end of file
